/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the NodepoolsAttachServersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolsAttachServersRequest{}

// NodepoolsAttachServersRequest struct for NodepoolsAttachServersRequest
type NodepoolsAttachServersRequest struct {
	ServerIds []string `json:"server_ids,omitempty"`
}

// NewNodepoolsAttachServersRequest instantiates a new NodepoolsAttachServersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolsAttachServersRequest() *NodepoolsAttachServersRequest {
	this := NodepoolsAttachServersRequest{}
	return &this
}

// NewNodepoolsAttachServersRequestWithDefaults instantiates a new NodepoolsAttachServersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolsAttachServersRequestWithDefaults() *NodepoolsAttachServersRequest {
	this := NodepoolsAttachServersRequest{}
	return &this
}

// GetServerIds returns the ServerIds field value if set, zero value otherwise.
func (o *NodepoolsAttachServersRequest) GetServerIds() []string {
	if o == nil || IsNil(o.ServerIds) {
		var ret []string
		return ret
	}
	return o.ServerIds
}

// GetServerIdsOk returns a tuple with the ServerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsAttachServersRequest) GetServerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ServerIds) {
		return nil, false
	}
	return o.ServerIds, true
}

// HasServerIds returns a boolean if a field has been set.
func (o *NodepoolsAttachServersRequest) HasServerIds() bool {
	if o != nil && !IsNil(o.ServerIds) {
		return true
	}

	return false
}

// SetServerIds gets a reference to the given []string and assigns it to the ServerIds field.
func (o *NodepoolsAttachServersRequest) SetServerIds(v []string) {
	o.ServerIds = v
}

func (o NodepoolsAttachServersRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolsAttachServersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerIds) {
		toSerialize["server_ids"] = o.ServerIds
	}
	return toSerialize, nil
}

type NullableNodepoolsAttachServersRequest struct {
	value *NodepoolsAttachServersRequest
	isSet bool
}

func (v NullableNodepoolsAttachServersRequest) Get() *NodepoolsAttachServersRequest {
	return v.value
}

func (v *NullableNodepoolsAttachServersRequest) Set(val *NodepoolsAttachServersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolsAttachServersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolsAttachServersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolsAttachServersRequest(val *NodepoolsAttachServersRequest) *NullableNodepoolsAttachServersRequest {
	return &NullableNodepoolsAttachServersRequest{value: val, isSet: true}
}

func (v NullableNodepoolsAttachServersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolsAttachServersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
