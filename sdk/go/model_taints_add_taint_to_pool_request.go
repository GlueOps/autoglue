/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the TaintsAddTaintToPoolRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TaintsAddTaintToPoolRequest{}

// TaintsAddTaintToPoolRequest struct for TaintsAddTaintToPoolRequest
type TaintsAddTaintToPoolRequest struct {
	NodePoolIds []string `json:"node_pool_ids,omitempty"`
}

// NewTaintsAddTaintToPoolRequest instantiates a new TaintsAddTaintToPoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTaintsAddTaintToPoolRequest() *TaintsAddTaintToPoolRequest {
	this := TaintsAddTaintToPoolRequest{}
	return &this
}

// NewTaintsAddTaintToPoolRequestWithDefaults instantiates a new TaintsAddTaintToPoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTaintsAddTaintToPoolRequestWithDefaults() *TaintsAddTaintToPoolRequest {
	this := TaintsAddTaintToPoolRequest{}
	return &this
}

// GetNodePoolIds returns the NodePoolIds field value if set, zero value otherwise.
func (o *TaintsAddTaintToPoolRequest) GetNodePoolIds() []string {
	if o == nil || IsNil(o.NodePoolIds) {
		var ret []string
		return ret
	}
	return o.NodePoolIds
}

// GetNodePoolIdsOk returns a tuple with the NodePoolIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TaintsAddTaintToPoolRequest) GetNodePoolIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NodePoolIds) {
		return nil, false
	}
	return o.NodePoolIds, true
}

// HasNodePoolIds returns a boolean if a field has been set.
func (o *TaintsAddTaintToPoolRequest) HasNodePoolIds() bool {
	if o != nil && !IsNil(o.NodePoolIds) {
		return true
	}

	return false
}

// SetNodePoolIds gets a reference to the given []string and assigns it to the NodePoolIds field.
func (o *TaintsAddTaintToPoolRequest) SetNodePoolIds(v []string) {
	o.NodePoolIds = v
}

func (o TaintsAddTaintToPoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TaintsAddTaintToPoolRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NodePoolIds) {
		toSerialize["node_pool_ids"] = o.NodePoolIds
	}
	return toSerialize, nil
}

type NullableTaintsAddTaintToPoolRequest struct {
	value *TaintsAddTaintToPoolRequest
	isSet bool
}

func (v NullableTaintsAddTaintToPoolRequest) Get() *TaintsAddTaintToPoolRequest {
	return v.value
}

func (v *NullableTaintsAddTaintToPoolRequest) Set(val *TaintsAddTaintToPoolRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTaintsAddTaintToPoolRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTaintsAddTaintToPoolRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTaintsAddTaintToPoolRequest(val *TaintsAddTaintToPoolRequest) *NullableTaintsAddTaintToPoolRequest {
	return &NullableTaintsAddTaintToPoolRequest{value: val, isSet: true}
}

func (v NullableTaintsAddTaintToPoolRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTaintsAddTaintToPoolRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
