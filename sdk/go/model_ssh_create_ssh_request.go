/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the SshCreateSSHRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SshCreateSSHRequest{}

// SshCreateSSHRequest struct for SshCreateSSHRequest
type SshCreateSSHRequest struct {
	Bits     *int32  `json:"bits,omitempty"`
	Comment  *string `json:"comment,omitempty"`
	Download *string `json:"download,omitempty"`
	Name     *string `json:"name,omitempty"`
}

// NewSshCreateSSHRequest instantiates a new SshCreateSSHRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSshCreateSSHRequest() *SshCreateSSHRequest {
	this := SshCreateSSHRequest{}
	return &this
}

// NewSshCreateSSHRequestWithDefaults instantiates a new SshCreateSSHRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSshCreateSSHRequestWithDefaults() *SshCreateSSHRequest {
	this := SshCreateSSHRequest{}
	return &this
}

// GetBits returns the Bits field value if set, zero value otherwise.
func (o *SshCreateSSHRequest) GetBits() int32 {
	if o == nil || IsNil(o.Bits) {
		var ret int32
		return ret
	}
	return *o.Bits
}

// GetBitsOk returns a tuple with the Bits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCreateSSHRequest) GetBitsOk() (*int32, bool) {
	if o == nil || IsNil(o.Bits) {
		return nil, false
	}
	return o.Bits, true
}

// HasBits returns a boolean if a field has been set.
func (o *SshCreateSSHRequest) HasBits() bool {
	if o != nil && !IsNil(o.Bits) {
		return true
	}

	return false
}

// SetBits gets a reference to the given int32 and assigns it to the Bits field.
func (o *SshCreateSSHRequest) SetBits(v int32) {
	o.Bits = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *SshCreateSSHRequest) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCreateSSHRequest) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *SshCreateSSHRequest) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *SshCreateSSHRequest) SetComment(v string) {
	o.Comment = &v
}

// GetDownload returns the Download field value if set, zero value otherwise.
func (o *SshCreateSSHRequest) GetDownload() string {
	if o == nil || IsNil(o.Download) {
		var ret string
		return ret
	}
	return *o.Download
}

// GetDownloadOk returns a tuple with the Download field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCreateSSHRequest) GetDownloadOk() (*string, bool) {
	if o == nil || IsNil(o.Download) {
		return nil, false
	}
	return o.Download, true
}

// HasDownload returns a boolean if a field has been set.
func (o *SshCreateSSHRequest) HasDownload() bool {
	if o != nil && !IsNil(o.Download) {
		return true
	}

	return false
}

// SetDownload gets a reference to the given string and assigns it to the Download field.
func (o *SshCreateSSHRequest) SetDownload(v string) {
	o.Download = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SshCreateSSHRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SshCreateSSHRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SshCreateSSHRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SshCreateSSHRequest) SetName(v string) {
	o.Name = &v
}

func (o SshCreateSSHRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SshCreateSSHRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bits) {
		toSerialize["bits"] = o.Bits
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.Download) {
		toSerialize["download"] = o.Download
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableSshCreateSSHRequest struct {
	value *SshCreateSSHRequest
	isSet bool
}

func (v NullableSshCreateSSHRequest) Get() *SshCreateSSHRequest {
	return v.value
}

func (v *NullableSshCreateSSHRequest) Set(val *SshCreateSSHRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSshCreateSSHRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSshCreateSSHRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSshCreateSSHRequest(val *SshCreateSSHRequest) *NullableSshCreateSSHRequest {
	return &NullableSshCreateSSHRequest{value: val, isSet: true}
}

func (v NullableSshCreateSSHRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSshCreateSSHRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
