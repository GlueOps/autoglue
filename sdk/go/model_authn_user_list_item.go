/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the AuthnUserListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthnUserListItem{}

// AuthnUserListItem struct for AuthnUserListItem
type AuthnUserListItem struct {
	CreatedAt     map[string]interface{} `json:"created_at,omitempty"`
	Email         *string                `json:"email,omitempty"`
	EmailVerified *bool                  `json:"email_verified,omitempty"`
	Id            map[string]interface{} `json:"id,omitempty"`
	Name          *string                `json:"name,omitempty"`
	Role          *string                `json:"role,omitempty"`
	UpdatedAt     map[string]interface{} `json:"updated_at,omitempty"`
}

// NewAuthnUserListItem instantiates a new AuthnUserListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnUserListItem() *AuthnUserListItem {
	this := AuthnUserListItem{}
	return &this
}

// NewAuthnUserListItemWithDefaults instantiates a new AuthnUserListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnUserListItemWithDefaults() *AuthnUserListItem {
	this := AuthnUserListItem{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetCreatedAt() map[string]interface{} {
	if o == nil || IsNil(o.CreatedAt) {
		var ret map[string]interface{}
		return ret
	}
	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetCreatedAtOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return map[string]interface{}{}, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given map[string]interface{} and assigns it to the CreatedAt field.
func (o *AuthnUserListItem) SetCreatedAt(v map[string]interface{}) {
	o.CreatedAt = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AuthnUserListItem) SetEmail(v string) {
	o.Email = &v
}

// GetEmailVerified returns the EmailVerified field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetEmailVerified() bool {
	if o == nil || IsNil(o.EmailVerified) {
		var ret bool
		return ret
	}
	return *o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailVerified) {
		return nil, false
	}
	return o.EmailVerified, true
}

// HasEmailVerified returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasEmailVerified() bool {
	if o != nil && !IsNil(o.EmailVerified) {
		return true
	}

	return false
}

// SetEmailVerified gets a reference to the given bool and assigns it to the EmailVerified field.
func (o *AuthnUserListItem) SetEmailVerified(v bool) {
	o.EmailVerified = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetId() map[string]interface{} {
	if o == nil || IsNil(o.Id) {
		var ret map[string]interface{}
		return ret
	}
	return o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetIdOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Id) {
		return map[string]interface{}{}, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given map[string]interface{} and assigns it to the Id field.
func (o *AuthnUserListItem) SetId(v map[string]interface{}) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthnUserListItem) SetName(v string) {
	o.Name = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AuthnUserListItem) SetRole(v string) {
	o.Role = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *AuthnUserListItem) GetUpdatedAt() map[string]interface{} {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnUserListItem) GetUpdatedAtOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return map[string]interface{}{}, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *AuthnUserListItem) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given map[string]interface{} and assigns it to the UpdatedAt field.
func (o *AuthnUserListItem) SetUpdatedAt(v map[string]interface{}) {
	o.UpdatedAt = v
}

func (o AuthnUserListItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthnUserListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.EmailVerified) {
		toSerialize["email_verified"] = o.EmailVerified
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableAuthnUserListItem struct {
	value *AuthnUserListItem
	isSet bool
}

func (v NullableAuthnUserListItem) Get() *AuthnUserListItem {
	return v.value
}

func (v *NullableAuthnUserListItem) Set(val *AuthnUserListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnUserListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnUserListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnUserListItem(val *AuthnUserListItem) *NullableAuthnUserListItem {
	return &NullableAuthnUserListItem{value: val, isSet: true}
}

func (v NullableAuthnUserListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnUserListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
