/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the NodepoolsAttachAnnotationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolsAttachAnnotationsRequest{}

// NodepoolsAttachAnnotationsRequest struct for NodepoolsAttachAnnotationsRequest
type NodepoolsAttachAnnotationsRequest struct {
	AnnotationIds []string `json:"annotation_ids,omitempty"`
}

// NewNodepoolsAttachAnnotationsRequest instantiates a new NodepoolsAttachAnnotationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolsAttachAnnotationsRequest() *NodepoolsAttachAnnotationsRequest {
	this := NodepoolsAttachAnnotationsRequest{}
	return &this
}

// NewNodepoolsAttachAnnotationsRequestWithDefaults instantiates a new NodepoolsAttachAnnotationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolsAttachAnnotationsRequestWithDefaults() *NodepoolsAttachAnnotationsRequest {
	this := NodepoolsAttachAnnotationsRequest{}
	return &this
}

// GetAnnotationIds returns the AnnotationIds field value if set, zero value otherwise.
func (o *NodepoolsAttachAnnotationsRequest) GetAnnotationIds() []string {
	if o == nil || IsNil(o.AnnotationIds) {
		var ret []string
		return ret
	}
	return o.AnnotationIds
}

// GetAnnotationIdsOk returns a tuple with the AnnotationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsAttachAnnotationsRequest) GetAnnotationIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AnnotationIds) {
		return nil, false
	}
	return o.AnnotationIds, true
}

// HasAnnotationIds returns a boolean if a field has been set.
func (o *NodepoolsAttachAnnotationsRequest) HasAnnotationIds() bool {
	if o != nil && !IsNil(o.AnnotationIds) {
		return true
	}

	return false
}

// SetAnnotationIds gets a reference to the given []string and assigns it to the AnnotationIds field.
func (o *NodepoolsAttachAnnotationsRequest) SetAnnotationIds(v []string) {
	o.AnnotationIds = v
}

func (o NodepoolsAttachAnnotationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolsAttachAnnotationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnnotationIds) {
		toSerialize["annotation_ids"] = o.AnnotationIds
	}
	return toSerialize, nil
}

type NullableNodepoolsAttachAnnotationsRequest struct {
	value *NodepoolsAttachAnnotationsRequest
	isSet bool
}

func (v NullableNodepoolsAttachAnnotationsRequest) Get() *NodepoolsAttachAnnotationsRequest {
	return v.value
}

func (v *NullableNodepoolsAttachAnnotationsRequest) Set(val *NodepoolsAttachAnnotationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolsAttachAnnotationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolsAttachAnnotationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolsAttachAnnotationsRequest(val *NodepoolsAttachAnnotationsRequest) *NullableNodepoolsAttachAnnotationsRequest {
	return &NullableNodepoolsAttachAnnotationsRequest{value: val, isSet: true}
}

func (v NullableNodepoolsAttachAnnotationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolsAttachAnnotationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
