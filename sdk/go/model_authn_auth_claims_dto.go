/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the AuthnAuthClaimsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthnAuthClaimsDTO{}

// AuthnAuthClaimsDTO struct for AuthnAuthClaimsDTO
type AuthnAuthClaimsDTO struct {
	Aud   []string `json:"aud,omitempty"`
	Exp   *int32   `json:"exp,omitempty"`
	Iat   *int32   `json:"iat,omitempty"`
	Iss   *string  `json:"iss,omitempty"`
	Nbf   *int32   `json:"nbf,omitempty"`
	Orgs  []string `json:"orgs,omitempty"`
	Roles []string `json:"roles,omitempty"`
	Sub   *string  `json:"sub,omitempty"`
}

// NewAuthnAuthClaimsDTO instantiates a new AuthnAuthClaimsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnAuthClaimsDTO() *AuthnAuthClaimsDTO {
	this := AuthnAuthClaimsDTO{}
	return &this
}

// NewAuthnAuthClaimsDTOWithDefaults instantiates a new AuthnAuthClaimsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnAuthClaimsDTOWithDefaults() *AuthnAuthClaimsDTO {
	this := AuthnAuthClaimsDTO{}
	return &this
}

// GetAud returns the Aud field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetAud() []string {
	if o == nil || IsNil(o.Aud) {
		var ret []string
		return ret
	}
	return o.Aud
}

// GetAudOk returns a tuple with the Aud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetAudOk() ([]string, bool) {
	if o == nil || IsNil(o.Aud) {
		return nil, false
	}
	return o.Aud, true
}

// HasAud returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasAud() bool {
	if o != nil && !IsNil(o.Aud) {
		return true
	}

	return false
}

// SetAud gets a reference to the given []string and assigns it to the Aud field.
func (o *AuthnAuthClaimsDTO) SetAud(v []string) {
	o.Aud = v
}

// GetExp returns the Exp field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetExp() int32 {
	if o == nil || IsNil(o.Exp) {
		var ret int32
		return ret
	}
	return *o.Exp
}

// GetExpOk returns a tuple with the Exp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetExpOk() (*int32, bool) {
	if o == nil || IsNil(o.Exp) {
		return nil, false
	}
	return o.Exp, true
}

// HasExp returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasExp() bool {
	if o != nil && !IsNil(o.Exp) {
		return true
	}

	return false
}

// SetExp gets a reference to the given int32 and assigns it to the Exp field.
func (o *AuthnAuthClaimsDTO) SetExp(v int32) {
	o.Exp = &v
}

// GetIat returns the Iat field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetIat() int32 {
	if o == nil || IsNil(o.Iat) {
		var ret int32
		return ret
	}
	return *o.Iat
}

// GetIatOk returns a tuple with the Iat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetIatOk() (*int32, bool) {
	if o == nil || IsNil(o.Iat) {
		return nil, false
	}
	return o.Iat, true
}

// HasIat returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasIat() bool {
	if o != nil && !IsNil(o.Iat) {
		return true
	}

	return false
}

// SetIat gets a reference to the given int32 and assigns it to the Iat field.
func (o *AuthnAuthClaimsDTO) SetIat(v int32) {
	o.Iat = &v
}

// GetIss returns the Iss field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetIss() string {
	if o == nil || IsNil(o.Iss) {
		var ret string
		return ret
	}
	return *o.Iss
}

// GetIssOk returns a tuple with the Iss field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetIssOk() (*string, bool) {
	if o == nil || IsNil(o.Iss) {
		return nil, false
	}
	return o.Iss, true
}

// HasIss returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasIss() bool {
	if o != nil && !IsNil(o.Iss) {
		return true
	}

	return false
}

// SetIss gets a reference to the given string and assigns it to the Iss field.
func (o *AuthnAuthClaimsDTO) SetIss(v string) {
	o.Iss = &v
}

// GetNbf returns the Nbf field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetNbf() int32 {
	if o == nil || IsNil(o.Nbf) {
		var ret int32
		return ret
	}
	return *o.Nbf
}

// GetNbfOk returns a tuple with the Nbf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetNbfOk() (*int32, bool) {
	if o == nil || IsNil(o.Nbf) {
		return nil, false
	}
	return o.Nbf, true
}

// HasNbf returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasNbf() bool {
	if o != nil && !IsNil(o.Nbf) {
		return true
	}

	return false
}

// SetNbf gets a reference to the given int32 and assigns it to the Nbf field.
func (o *AuthnAuthClaimsDTO) SetNbf(v int32) {
	o.Nbf = &v
}

// GetOrgs returns the Orgs field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetOrgs() []string {
	if o == nil || IsNil(o.Orgs) {
		var ret []string
		return ret
	}
	return o.Orgs
}

// GetOrgsOk returns a tuple with the Orgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetOrgsOk() ([]string, bool) {
	if o == nil || IsNil(o.Orgs) {
		return nil, false
	}
	return o.Orgs, true
}

// HasOrgs returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasOrgs() bool {
	if o != nil && !IsNil(o.Orgs) {
		return true
	}

	return false
}

// SetOrgs gets a reference to the given []string and assigns it to the Orgs field.
func (o *AuthnAuthClaimsDTO) SetOrgs(v []string) {
	o.Orgs = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *AuthnAuthClaimsDTO) SetRoles(v []string) {
	o.Roles = v
}

// GetSub returns the Sub field value if set, zero value otherwise.
func (o *AuthnAuthClaimsDTO) GetSub() string {
	if o == nil || IsNil(o.Sub) {
		var ret string
		return ret
	}
	return *o.Sub
}

// GetSubOk returns a tuple with the Sub field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAuthClaimsDTO) GetSubOk() (*string, bool) {
	if o == nil || IsNil(o.Sub) {
		return nil, false
	}
	return o.Sub, true
}

// HasSub returns a boolean if a field has been set.
func (o *AuthnAuthClaimsDTO) HasSub() bool {
	if o != nil && !IsNil(o.Sub) {
		return true
	}

	return false
}

// SetSub gets a reference to the given string and assigns it to the Sub field.
func (o *AuthnAuthClaimsDTO) SetSub(v string) {
	o.Sub = &v
}

func (o AuthnAuthClaimsDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthnAuthClaimsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aud) {
		toSerialize["aud"] = o.Aud
	}
	if !IsNil(o.Exp) {
		toSerialize["exp"] = o.Exp
	}
	if !IsNil(o.Iat) {
		toSerialize["iat"] = o.Iat
	}
	if !IsNil(o.Iss) {
		toSerialize["iss"] = o.Iss
	}
	if !IsNil(o.Nbf) {
		toSerialize["nbf"] = o.Nbf
	}
	if !IsNil(o.Orgs) {
		toSerialize["orgs"] = o.Orgs
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.Sub) {
		toSerialize["sub"] = o.Sub
	}
	return toSerialize, nil
}

type NullableAuthnAuthClaimsDTO struct {
	value *AuthnAuthClaimsDTO
	isSet bool
}

func (v NullableAuthnAuthClaimsDTO) Get() *AuthnAuthClaimsDTO {
	return v.value
}

func (v *NullableAuthnAuthClaimsDTO) Set(val *AuthnAuthClaimsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnAuthClaimsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnAuthClaimsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnAuthClaimsDTO(val *AuthnAuthClaimsDTO) *NullableAuthnAuthClaimsDTO {
	return &NullableAuthnAuthClaimsDTO{value: val, isSet: true}
}

func (v NullableAuthnAuthClaimsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnAuthClaimsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
