/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the OrgsOrgInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgsOrgInput{}

// OrgsOrgInput struct for OrgsOrgInput
type OrgsOrgInput struct {
	Name *string `json:"name,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

// NewOrgsOrgInput instantiates a new OrgsOrgInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsOrgInput() *OrgsOrgInput {
	this := OrgsOrgInput{}
	return &this
}

// NewOrgsOrgInputWithDefaults instantiates a new OrgsOrgInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsOrgInputWithDefaults() *OrgsOrgInput {
	this := OrgsOrgInput{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrgsOrgInput) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsOrgInput) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrgsOrgInput) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrgsOrgInput) SetName(v string) {
	o.Name = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *OrgsOrgInput) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsOrgInput) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *OrgsOrgInput) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *OrgsOrgInput) SetSlug(v string) {
	o.Slug = &v
}

func (o OrgsOrgInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgsOrgInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	return toSerialize, nil
}

type NullableOrgsOrgInput struct {
	value *OrgsOrgInput
	isSet bool
}

func (v NullableOrgsOrgInput) Get() *OrgsOrgInput {
	return v.value
}

func (v *NullableOrgsOrgInput) Set(val *OrgsOrgInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsOrgInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsOrgInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsOrgInput(val *OrgsOrgInput) *NullableOrgsOrgInput {
	return &NullableOrgsOrgInput{value: val, isSet: true}
}

func (v NullableOrgsOrgInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsOrgInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
