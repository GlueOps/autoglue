/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the JobsJobListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsJobListItem{}

// JobsJobListItem struct for JobsJobListItem
type JobsJobListItem struct {
	ElapsedMs    *int32  `json:"elapsed_ms,omitempty"`
	Failed       *int32  `json:"failed,omitempty"`
	Id           *string `json:"id,omitempty"`
	LastError    *string `json:"last_error,omitempty"`
	MaxRetry     *int32  `json:"max_retry,omitempty"`
	Processed    *int32  `json:"processed,omitempty"`
	QueueName    *string `json:"queue_name,omitempty"`
	Ready        *int32  `json:"ready,omitempty"`
	ResultStatus *string `json:"result_status,omitempty"`
	RetryCount   *int32  `json:"retry_count,omitempty"`
	ScheduledAt  *string `json:"scheduled_at,omitempty"`
	StartedAt    *string `json:"started_at,omitempty"`
	Status       *string `json:"status,omitempty"`
	UpdatedAt    *string `json:"updated_at,omitempty"`
}

// NewJobsJobListItem instantiates a new JobsJobListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsJobListItem() *JobsJobListItem {
	this := JobsJobListItem{}
	return &this
}

// NewJobsJobListItemWithDefaults instantiates a new JobsJobListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsJobListItemWithDefaults() *JobsJobListItem {
	this := JobsJobListItem{}
	return &this
}

// GetElapsedMs returns the ElapsedMs field value if set, zero value otherwise.
func (o *JobsJobListItem) GetElapsedMs() int32 {
	if o == nil || IsNil(o.ElapsedMs) {
		var ret int32
		return ret
	}
	return *o.ElapsedMs
}

// GetElapsedMsOk returns a tuple with the ElapsedMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetElapsedMsOk() (*int32, bool) {
	if o == nil || IsNil(o.ElapsedMs) {
		return nil, false
	}
	return o.ElapsedMs, true
}

// HasElapsedMs returns a boolean if a field has been set.
func (o *JobsJobListItem) HasElapsedMs() bool {
	if o != nil && !IsNil(o.ElapsedMs) {
		return true
	}

	return false
}

// SetElapsedMs gets a reference to the given int32 and assigns it to the ElapsedMs field.
func (o *JobsJobListItem) SetElapsedMs(v int32) {
	o.ElapsedMs = &v
}

// GetFailed returns the Failed field value if set, zero value otherwise.
func (o *JobsJobListItem) GetFailed() int32 {
	if o == nil || IsNil(o.Failed) {
		var ret int32
		return ret
	}
	return *o.Failed
}

// GetFailedOk returns a tuple with the Failed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetFailedOk() (*int32, bool) {
	if o == nil || IsNil(o.Failed) {
		return nil, false
	}
	return o.Failed, true
}

// HasFailed returns a boolean if a field has been set.
func (o *JobsJobListItem) HasFailed() bool {
	if o != nil && !IsNil(o.Failed) {
		return true
	}

	return false
}

// SetFailed gets a reference to the given int32 and assigns it to the Failed field.
func (o *JobsJobListItem) SetFailed(v int32) {
	o.Failed = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobsJobListItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobsJobListItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobsJobListItem) SetId(v string) {
	o.Id = &v
}

// GetLastError returns the LastError field value if set, zero value otherwise.
func (o *JobsJobListItem) GetLastError() string {
	if o == nil || IsNil(o.LastError) {
		var ret string
		return ret
	}
	return *o.LastError
}

// GetLastErrorOk returns a tuple with the LastError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetLastErrorOk() (*string, bool) {
	if o == nil || IsNil(o.LastError) {
		return nil, false
	}
	return o.LastError, true
}

// HasLastError returns a boolean if a field has been set.
func (o *JobsJobListItem) HasLastError() bool {
	if o != nil && !IsNil(o.LastError) {
		return true
	}

	return false
}

// SetLastError gets a reference to the given string and assigns it to the LastError field.
func (o *JobsJobListItem) SetLastError(v string) {
	o.LastError = &v
}

// GetMaxRetry returns the MaxRetry field value if set, zero value otherwise.
func (o *JobsJobListItem) GetMaxRetry() int32 {
	if o == nil || IsNil(o.MaxRetry) {
		var ret int32
		return ret
	}
	return *o.MaxRetry
}

// GetMaxRetryOk returns a tuple with the MaxRetry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetMaxRetryOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxRetry) {
		return nil, false
	}
	return o.MaxRetry, true
}

// HasMaxRetry returns a boolean if a field has been set.
func (o *JobsJobListItem) HasMaxRetry() bool {
	if o != nil && !IsNil(o.MaxRetry) {
		return true
	}

	return false
}

// SetMaxRetry gets a reference to the given int32 and assigns it to the MaxRetry field.
func (o *JobsJobListItem) SetMaxRetry(v int32) {
	o.MaxRetry = &v
}

// GetProcessed returns the Processed field value if set, zero value otherwise.
func (o *JobsJobListItem) GetProcessed() int32 {
	if o == nil || IsNil(o.Processed) {
		var ret int32
		return ret
	}
	return *o.Processed
}

// GetProcessedOk returns a tuple with the Processed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetProcessedOk() (*int32, bool) {
	if o == nil || IsNil(o.Processed) {
		return nil, false
	}
	return o.Processed, true
}

// HasProcessed returns a boolean if a field has been set.
func (o *JobsJobListItem) HasProcessed() bool {
	if o != nil && !IsNil(o.Processed) {
		return true
	}

	return false
}

// SetProcessed gets a reference to the given int32 and assigns it to the Processed field.
func (o *JobsJobListItem) SetProcessed(v int32) {
	o.Processed = &v
}

// GetQueueName returns the QueueName field value if set, zero value otherwise.
func (o *JobsJobListItem) GetQueueName() string {
	if o == nil || IsNil(o.QueueName) {
		var ret string
		return ret
	}
	return *o.QueueName
}

// GetQueueNameOk returns a tuple with the QueueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetQueueNameOk() (*string, bool) {
	if o == nil || IsNil(o.QueueName) {
		return nil, false
	}
	return o.QueueName, true
}

// HasQueueName returns a boolean if a field has been set.
func (o *JobsJobListItem) HasQueueName() bool {
	if o != nil && !IsNil(o.QueueName) {
		return true
	}

	return false
}

// SetQueueName gets a reference to the given string and assigns it to the QueueName field.
func (o *JobsJobListItem) SetQueueName(v string) {
	o.QueueName = &v
}

// GetReady returns the Ready field value if set, zero value otherwise.
func (o *JobsJobListItem) GetReady() int32 {
	if o == nil || IsNil(o.Ready) {
		var ret int32
		return ret
	}
	return *o.Ready
}

// GetReadyOk returns a tuple with the Ready field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetReadyOk() (*int32, bool) {
	if o == nil || IsNil(o.Ready) {
		return nil, false
	}
	return o.Ready, true
}

// HasReady returns a boolean if a field has been set.
func (o *JobsJobListItem) HasReady() bool {
	if o != nil && !IsNil(o.Ready) {
		return true
	}

	return false
}

// SetReady gets a reference to the given int32 and assigns it to the Ready field.
func (o *JobsJobListItem) SetReady(v int32) {
	o.Ready = &v
}

// GetResultStatus returns the ResultStatus field value if set, zero value otherwise.
func (o *JobsJobListItem) GetResultStatus() string {
	if o == nil || IsNil(o.ResultStatus) {
		var ret string
		return ret
	}
	return *o.ResultStatus
}

// GetResultStatusOk returns a tuple with the ResultStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetResultStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ResultStatus) {
		return nil, false
	}
	return o.ResultStatus, true
}

// HasResultStatus returns a boolean if a field has been set.
func (o *JobsJobListItem) HasResultStatus() bool {
	if o != nil && !IsNil(o.ResultStatus) {
		return true
	}

	return false
}

// SetResultStatus gets a reference to the given string and assigns it to the ResultStatus field.
func (o *JobsJobListItem) SetResultStatus(v string) {
	o.ResultStatus = &v
}

// GetRetryCount returns the RetryCount field value if set, zero value otherwise.
func (o *JobsJobListItem) GetRetryCount() int32 {
	if o == nil || IsNil(o.RetryCount) {
		var ret int32
		return ret
	}
	return *o.RetryCount
}

// GetRetryCountOk returns a tuple with the RetryCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetRetryCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RetryCount) {
		return nil, false
	}
	return o.RetryCount, true
}

// HasRetryCount returns a boolean if a field has been set.
func (o *JobsJobListItem) HasRetryCount() bool {
	if o != nil && !IsNil(o.RetryCount) {
		return true
	}

	return false
}

// SetRetryCount gets a reference to the given int32 and assigns it to the RetryCount field.
func (o *JobsJobListItem) SetRetryCount(v int32) {
	o.RetryCount = &v
}

// GetScheduledAt returns the ScheduledAt field value if set, zero value otherwise.
func (o *JobsJobListItem) GetScheduledAt() string {
	if o == nil || IsNil(o.ScheduledAt) {
		var ret string
		return ret
	}
	return *o.ScheduledAt
}

// GetScheduledAtOk returns a tuple with the ScheduledAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetScheduledAtOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduledAt) {
		return nil, false
	}
	return o.ScheduledAt, true
}

// HasScheduledAt returns a boolean if a field has been set.
func (o *JobsJobListItem) HasScheduledAt() bool {
	if o != nil && !IsNil(o.ScheduledAt) {
		return true
	}

	return false
}

// SetScheduledAt gets a reference to the given string and assigns it to the ScheduledAt field.
func (o *JobsJobListItem) SetScheduledAt(v string) {
	o.ScheduledAt = &v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise.
func (o *JobsJobListItem) GetStartedAt() string {
	if o == nil || IsNil(o.StartedAt) {
		var ret string
		return ret
	}
	return *o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetStartedAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartedAt) {
		return nil, false
	}
	return o.StartedAt, true
}

// HasStartedAt returns a boolean if a field has been set.
func (o *JobsJobListItem) HasStartedAt() bool {
	if o != nil && !IsNil(o.StartedAt) {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given string and assigns it to the StartedAt field.
func (o *JobsJobListItem) SetStartedAt(v string) {
	o.StartedAt = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobsJobListItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobsJobListItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobsJobListItem) SetStatus(v string) {
	o.Status = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *JobsJobListItem) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsJobListItem) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *JobsJobListItem) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *JobsJobListItem) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o JobsJobListItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsJobListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ElapsedMs) {
		toSerialize["elapsed_ms"] = o.ElapsedMs
	}
	if !IsNil(o.Failed) {
		toSerialize["failed"] = o.Failed
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LastError) {
		toSerialize["last_error"] = o.LastError
	}
	if !IsNil(o.MaxRetry) {
		toSerialize["max_retry"] = o.MaxRetry
	}
	if !IsNil(o.Processed) {
		toSerialize["processed"] = o.Processed
	}
	if !IsNil(o.QueueName) {
		toSerialize["queue_name"] = o.QueueName
	}
	if !IsNil(o.Ready) {
		toSerialize["ready"] = o.Ready
	}
	if !IsNil(o.ResultStatus) {
		toSerialize["result_status"] = o.ResultStatus
	}
	if !IsNil(o.RetryCount) {
		toSerialize["retry_count"] = o.RetryCount
	}
	if !IsNil(o.ScheduledAt) {
		toSerialize["scheduled_at"] = o.ScheduledAt
	}
	if !IsNil(o.StartedAt) {
		toSerialize["started_at"] = o.StartedAt
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableJobsJobListItem struct {
	value *JobsJobListItem
	isSet bool
}

func (v NullableJobsJobListItem) Get() *JobsJobListItem {
	return v.value
}

func (v *NullableJobsJobListItem) Set(val *JobsJobListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsJobListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsJobListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsJobListItem(val *JobsJobListItem) *NullableJobsJobListItem {
	return &NullableJobsJobListItem{value: val, isSet: true}
}

func (v NullableJobsJobListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsJobListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
