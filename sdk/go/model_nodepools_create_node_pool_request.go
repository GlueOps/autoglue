/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the NodepoolsCreateNodePoolRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolsCreateNodePoolRequest{}

// NodepoolsCreateNodePoolRequest struct for NodepoolsCreateNodePoolRequest
type NodepoolsCreateNodePoolRequest struct {
	Name      *string  `json:"name,omitempty"`
	ServerIds []string `json:"server_ids,omitempty"`
}

// NewNodepoolsCreateNodePoolRequest instantiates a new NodepoolsCreateNodePoolRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolsCreateNodePoolRequest() *NodepoolsCreateNodePoolRequest {
	this := NodepoolsCreateNodePoolRequest{}
	return &this
}

// NewNodepoolsCreateNodePoolRequestWithDefaults instantiates a new NodepoolsCreateNodePoolRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolsCreateNodePoolRequestWithDefaults() *NodepoolsCreateNodePoolRequest {
	this := NodepoolsCreateNodePoolRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *NodepoolsCreateNodePoolRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsCreateNodePoolRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *NodepoolsCreateNodePoolRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *NodepoolsCreateNodePoolRequest) SetName(v string) {
	o.Name = &v
}

// GetServerIds returns the ServerIds field value if set, zero value otherwise.
func (o *NodepoolsCreateNodePoolRequest) GetServerIds() []string {
	if o == nil || IsNil(o.ServerIds) {
		var ret []string
		return ret
	}
	return o.ServerIds
}

// GetServerIdsOk returns a tuple with the ServerIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsCreateNodePoolRequest) GetServerIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ServerIds) {
		return nil, false
	}
	return o.ServerIds, true
}

// HasServerIds returns a boolean if a field has been set.
func (o *NodepoolsCreateNodePoolRequest) HasServerIds() bool {
	if o != nil && !IsNil(o.ServerIds) {
		return true
	}

	return false
}

// SetServerIds gets a reference to the given []string and assigns it to the ServerIds field.
func (o *NodepoolsCreateNodePoolRequest) SetServerIds(v []string) {
	o.ServerIds = v
}

func (o NodepoolsCreateNodePoolRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolsCreateNodePoolRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.ServerIds) {
		toSerialize["server_ids"] = o.ServerIds
	}
	return toSerialize, nil
}

type NullableNodepoolsCreateNodePoolRequest struct {
	value *NodepoolsCreateNodePoolRequest
	isSet bool
}

func (v NullableNodepoolsCreateNodePoolRequest) Get() *NodepoolsCreateNodePoolRequest {
	return v.value
}

func (v *NullableNodepoolsCreateNodePoolRequest) Set(val *NodepoolsCreateNodePoolRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolsCreateNodePoolRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolsCreateNodePoolRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolsCreateNodePoolRequest(val *NodepoolsCreateNodePoolRequest) *NullableNodepoolsCreateNodePoolRequest {
	return &NullableNodepoolsCreateNodePoolRequest{value: val, isSet: true}
}

func (v NullableNodepoolsCreateNodePoolRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolsCreateNodePoolRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
