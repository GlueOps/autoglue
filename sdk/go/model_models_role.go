/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
	"fmt"
)

// ModelsRole the model 'ModelsRole'
type ModelsRole string

// List of models.Role
const (
	RoleAdmin ModelsRole = "admin"
	RoleUser  ModelsRole = "user"
)

// All allowed values of ModelsRole enum
var AllowedModelsRoleEnumValues = []ModelsRole{
	"admin",
	"user",
}

func (v *ModelsRole) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ModelsRole(value)
	for _, existing := range AllowedModelsRoleEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ModelsRole", value)
}

// NewModelsRoleFromValue returns a pointer to a valid ModelsRole
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewModelsRoleFromValue(v string) (*ModelsRole, error) {
	ev := ModelsRole(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ModelsRole: valid values are %v", v, AllowedModelsRoleEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ModelsRole) IsValid() bool {
	for _, existing := range AllowedModelsRoleEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to models.Role value
func (v ModelsRole) Ptr() *ModelsRole {
	return &v
}

type NullableModelsRole struct {
	value *ModelsRole
	isSet bool
}

func (v NullableModelsRole) Get() *ModelsRole {
	return v.value
}

func (v *NullableModelsRole) Set(val *ModelsRole) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsRole) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsRole(val *ModelsRole) *NullableModelsRole {
	return &NullableModelsRole{value: val, isSet: true}
}

func (v NullableModelsRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
