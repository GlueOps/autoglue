/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the ClustersCreateClusterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClustersCreateClusterRequest{}

// ClustersCreateClusterRequest struct for ClustersCreateClusterRequest
type ClustersCreateClusterRequest struct {
	BastionServerId     *string  `json:"bastion_server_id,omitempty"`
	ClusterLoadBalancer *string  `json:"cluster_load_balancer,omitempty"`
	ControlLoadBalancer *string  `json:"control_load_balancer,omitempty"`
	Kubeconfig          *string  `json:"kubeconfig,omitempty"`
	Name                *string  `json:"name,omitempty"`
	NodePoolIds         []string `json:"node_pool_ids,omitempty"`
	Provider            *string  `json:"provider,omitempty"`
	Region              *string  `json:"region,omitempty"`
}

// NewClustersCreateClusterRequest instantiates a new ClustersCreateClusterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClustersCreateClusterRequest() *ClustersCreateClusterRequest {
	this := ClustersCreateClusterRequest{}
	return &this
}

// NewClustersCreateClusterRequestWithDefaults instantiates a new ClustersCreateClusterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClustersCreateClusterRequestWithDefaults() *ClustersCreateClusterRequest {
	this := ClustersCreateClusterRequest{}
	return &this
}

// GetBastionServerId returns the BastionServerId field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetBastionServerId() string {
	if o == nil || IsNil(o.BastionServerId) {
		var ret string
		return ret
	}
	return *o.BastionServerId
}

// GetBastionServerIdOk returns a tuple with the BastionServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetBastionServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.BastionServerId) {
		return nil, false
	}
	return o.BastionServerId, true
}

// HasBastionServerId returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasBastionServerId() bool {
	if o != nil && !IsNil(o.BastionServerId) {
		return true
	}

	return false
}

// SetBastionServerId gets a reference to the given string and assigns it to the BastionServerId field.
func (o *ClustersCreateClusterRequest) SetBastionServerId(v string) {
	o.BastionServerId = &v
}

// GetClusterLoadBalancer returns the ClusterLoadBalancer field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetClusterLoadBalancer() string {
	if o == nil || IsNil(o.ClusterLoadBalancer) {
		var ret string
		return ret
	}
	return *o.ClusterLoadBalancer
}

// GetClusterLoadBalancerOk returns a tuple with the ClusterLoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetClusterLoadBalancerOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterLoadBalancer) {
		return nil, false
	}
	return o.ClusterLoadBalancer, true
}

// HasClusterLoadBalancer returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasClusterLoadBalancer() bool {
	if o != nil && !IsNil(o.ClusterLoadBalancer) {
		return true
	}

	return false
}

// SetClusterLoadBalancer gets a reference to the given string and assigns it to the ClusterLoadBalancer field.
func (o *ClustersCreateClusterRequest) SetClusterLoadBalancer(v string) {
	o.ClusterLoadBalancer = &v
}

// GetControlLoadBalancer returns the ControlLoadBalancer field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetControlLoadBalancer() string {
	if o == nil || IsNil(o.ControlLoadBalancer) {
		var ret string
		return ret
	}
	return *o.ControlLoadBalancer
}

// GetControlLoadBalancerOk returns a tuple with the ControlLoadBalancer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetControlLoadBalancerOk() (*string, bool) {
	if o == nil || IsNil(o.ControlLoadBalancer) {
		return nil, false
	}
	return o.ControlLoadBalancer, true
}

// HasControlLoadBalancer returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasControlLoadBalancer() bool {
	if o != nil && !IsNil(o.ControlLoadBalancer) {
		return true
	}

	return false
}

// SetControlLoadBalancer gets a reference to the given string and assigns it to the ControlLoadBalancer field.
func (o *ClustersCreateClusterRequest) SetControlLoadBalancer(v string) {
	o.ControlLoadBalancer = &v
}

// GetKubeconfig returns the Kubeconfig field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetKubeconfig() string {
	if o == nil || IsNil(o.Kubeconfig) {
		var ret string
		return ret
	}
	return *o.Kubeconfig
}

// GetKubeconfigOk returns a tuple with the Kubeconfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetKubeconfigOk() (*string, bool) {
	if o == nil || IsNil(o.Kubeconfig) {
		return nil, false
	}
	return o.Kubeconfig, true
}

// HasKubeconfig returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasKubeconfig() bool {
	if o != nil && !IsNil(o.Kubeconfig) {
		return true
	}

	return false
}

// SetKubeconfig gets a reference to the given string and assigns it to the Kubeconfig field.
func (o *ClustersCreateClusterRequest) SetKubeconfig(v string) {
	o.Kubeconfig = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClustersCreateClusterRequest) SetName(v string) {
	o.Name = &v
}

// GetNodePoolIds returns the NodePoolIds field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetNodePoolIds() []string {
	if o == nil || IsNil(o.NodePoolIds) {
		var ret []string
		return ret
	}
	return o.NodePoolIds
}

// GetNodePoolIdsOk returns a tuple with the NodePoolIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetNodePoolIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.NodePoolIds) {
		return nil, false
	}
	return o.NodePoolIds, true
}

// HasNodePoolIds returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasNodePoolIds() bool {
	if o != nil && !IsNil(o.NodePoolIds) {
		return true
	}

	return false
}

// SetNodePoolIds gets a reference to the given []string and assigns it to the NodePoolIds field.
func (o *ClustersCreateClusterRequest) SetNodePoolIds(v []string) {
	o.NodePoolIds = v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ClustersCreateClusterRequest) SetProvider(v string) {
	o.Provider = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ClustersCreateClusterRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersCreateClusterRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ClustersCreateClusterRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ClustersCreateClusterRequest) SetRegion(v string) {
	o.Region = &v
}

func (o ClustersCreateClusterRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClustersCreateClusterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BastionServerId) {
		toSerialize["bastion_server_id"] = o.BastionServerId
	}
	if !IsNil(o.ClusterLoadBalancer) {
		toSerialize["cluster_load_balancer"] = o.ClusterLoadBalancer
	}
	if !IsNil(o.ControlLoadBalancer) {
		toSerialize["control_load_balancer"] = o.ControlLoadBalancer
	}
	if !IsNil(o.Kubeconfig) {
		toSerialize["kubeconfig"] = o.Kubeconfig
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NodePoolIds) {
		toSerialize["node_pool_ids"] = o.NodePoolIds
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return toSerialize, nil
}

type NullableClustersCreateClusterRequest struct {
	value *ClustersCreateClusterRequest
	isSet bool
}

func (v NullableClustersCreateClusterRequest) Get() *ClustersCreateClusterRequest {
	return v.value
}

func (v *NullableClustersCreateClusterRequest) Set(val *ClustersCreateClusterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableClustersCreateClusterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableClustersCreateClusterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClustersCreateClusterRequest(val *ClustersCreateClusterRequest) *NullableClustersCreateClusterRequest {
	return &NullableClustersCreateClusterRequest{value: val, isSet: true}
}

func (v NullableClustersCreateClusterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClustersCreateClusterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
