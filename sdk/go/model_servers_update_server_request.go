/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the ServersUpdateServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServersUpdateServerRequest{}

// ServersUpdateServerRequest struct for ServersUpdateServerRequest
type ServersUpdateServerRequest struct {
	Hostname  *string `json:"hostname,omitempty"`
	IpAddress *string `json:"ip_address,omitempty"`
	Role      *string `json:"role,omitempty"`
	SshKeyId  *string `json:"ssh_key_id,omitempty"`
	SshUser   *string `json:"ssh_user,omitempty"`
	// enum: pending,provisioning,ready,failed
	Status *string `json:"status,omitempty"`
}

// NewServersUpdateServerRequest instantiates a new ServersUpdateServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServersUpdateServerRequest() *ServersUpdateServerRequest {
	this := ServersUpdateServerRequest{}
	return &this
}

// NewServersUpdateServerRequestWithDefaults instantiates a new ServersUpdateServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServersUpdateServerRequestWithDefaults() *ServersUpdateServerRequest {
	this := ServersUpdateServerRequest{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *ServersUpdateServerRequest) SetHostname(v string) {
	o.Hostname = &v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetIpAddress() string {
	if o == nil || IsNil(o.IpAddress) {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.IpAddress) {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasIpAddress() bool {
	if o != nil && !IsNil(o.IpAddress) {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *ServersUpdateServerRequest) SetIpAddress(v string) {
	o.IpAddress = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *ServersUpdateServerRequest) SetRole(v string) {
	o.Role = &v
}

// GetSshKeyId returns the SshKeyId field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetSshKeyId() string {
	if o == nil || IsNil(o.SshKeyId) {
		var ret string
		return ret
	}
	return *o.SshKeyId
}

// GetSshKeyIdOk returns a tuple with the SshKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetSshKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.SshKeyId) {
		return nil, false
	}
	return o.SshKeyId, true
}

// HasSshKeyId returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasSshKeyId() bool {
	if o != nil && !IsNil(o.SshKeyId) {
		return true
	}

	return false
}

// SetSshKeyId gets a reference to the given string and assigns it to the SshKeyId field.
func (o *ServersUpdateServerRequest) SetSshKeyId(v string) {
	o.SshKeyId = &v
}

// GetSshUser returns the SshUser field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetSshUser() string {
	if o == nil || IsNil(o.SshUser) {
		var ret string
		return ret
	}
	return *o.SshUser
}

// GetSshUserOk returns a tuple with the SshUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetSshUserOk() (*string, bool) {
	if o == nil || IsNil(o.SshUser) {
		return nil, false
	}
	return o.SshUser, true
}

// HasSshUser returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasSshUser() bool {
	if o != nil && !IsNil(o.SshUser) {
		return true
	}

	return false
}

// SetSshUser gets a reference to the given string and assigns it to the SshUser field.
func (o *ServersUpdateServerRequest) SetSshUser(v string) {
	o.SshUser = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServersUpdateServerRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServersUpdateServerRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServersUpdateServerRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ServersUpdateServerRequest) SetStatus(v string) {
	o.Status = &v
}

func (o ServersUpdateServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServersUpdateServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.IpAddress) {
		toSerialize["ip_address"] = o.IpAddress
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	if !IsNil(o.SshKeyId) {
		toSerialize["ssh_key_id"] = o.SshKeyId
	}
	if !IsNil(o.SshUser) {
		toSerialize["ssh_user"] = o.SshUser
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableServersUpdateServerRequest struct {
	value *ServersUpdateServerRequest
	isSet bool
}

func (v NullableServersUpdateServerRequest) Get() *ServersUpdateServerRequest {
	return v.value
}

func (v *NullableServersUpdateServerRequest) Set(val *ServersUpdateServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableServersUpdateServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableServersUpdateServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServersUpdateServerRequest(val *ServersUpdateServerRequest) *NullableServersUpdateServerRequest {
	return &NullableServersUpdateServerRequest{value: val, isSet: true}
}

func (v NullableServersUpdateServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServersUpdateServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
