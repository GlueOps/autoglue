/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the OrgsInviteInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrgsInviteInput{}

// OrgsInviteInput struct for OrgsInviteInput
type OrgsInviteInput struct {
	Email *string `json:"email,omitempty"`
	Role  *string `json:"role,omitempty"`
}

// NewOrgsInviteInput instantiates a new OrgsInviteInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsInviteInput() *OrgsInviteInput {
	this := OrgsInviteInput{}
	return &this
}

// NewOrgsInviteInputWithDefaults instantiates a new OrgsInviteInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsInviteInputWithDefaults() *OrgsInviteInput {
	this := OrgsInviteInput{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgsInviteInput) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInviteInput) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgsInviteInput) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgsInviteInput) SetEmail(v string) {
	o.Email = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrgsInviteInput) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsInviteInput) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrgsInviteInput) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrgsInviteInput) SetRole(v string) {
	o.Role = &v
}

func (o OrgsInviteInput) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrgsInviteInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableOrgsInviteInput struct {
	value *OrgsInviteInput
	isSet bool
}

func (v NullableOrgsInviteInput) Get() *OrgsInviteInput {
	return v.value
}

func (v *NullableOrgsInviteInput) Set(val *OrgsInviteInput) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsInviteInput) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsInviteInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsInviteInput(val *OrgsInviteInput) *NullableOrgsInviteInput {
	return &NullableOrgsInviteInput{value: val, isSet: true}
}

func (v NullableOrgsInviteInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsInviteInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
