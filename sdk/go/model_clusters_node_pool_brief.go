/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the ClustersNodePoolBrief type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClustersNodePoolBrief{}

// ClustersNodePoolBrief struct for ClustersNodePoolBrief
type ClustersNodePoolBrief struct {
	Annotations []ClustersAnnotationBrief `json:"annotations,omitempty"`
	Id          *string                   `json:"id,omitempty"`
	Labels      []ClustersLabelBrief      `json:"labels,omitempty"`
	Name        *string                   `json:"name,omitempty"`
	Servers     []ClustersServerBrief     `json:"servers,omitempty"`
	Taints      []ClustersTaintBrief      `json:"taints,omitempty"`
}

// NewClustersNodePoolBrief instantiates a new ClustersNodePoolBrief object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClustersNodePoolBrief() *ClustersNodePoolBrief {
	this := ClustersNodePoolBrief{}
	return &this
}

// NewClustersNodePoolBriefWithDefaults instantiates a new ClustersNodePoolBrief object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClustersNodePoolBriefWithDefaults() *ClustersNodePoolBrief {
	this := ClustersNodePoolBrief{}
	return &this
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetAnnotations() []ClustersAnnotationBrief {
	if o == nil || IsNil(o.Annotations) {
		var ret []ClustersAnnotationBrief
		return ret
	}
	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetAnnotationsOk() ([]ClustersAnnotationBrief, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given []ClustersAnnotationBrief and assigns it to the Annotations field.
func (o *ClustersNodePoolBrief) SetAnnotations(v []ClustersAnnotationBrief) {
	o.Annotations = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ClustersNodePoolBrief) SetId(v string) {
	o.Id = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetLabels() []ClustersLabelBrief {
	if o == nil || IsNil(o.Labels) {
		var ret []ClustersLabelBrief
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetLabelsOk() ([]ClustersLabelBrief, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []ClustersLabelBrief and assigns it to the Labels field.
func (o *ClustersNodePoolBrief) SetLabels(v []ClustersLabelBrief) {
	o.Labels = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ClustersNodePoolBrief) SetName(v string) {
	o.Name = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetServers() []ClustersServerBrief {
	if o == nil || IsNil(o.Servers) {
		var ret []ClustersServerBrief
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetServersOk() ([]ClustersServerBrief, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []ClustersServerBrief and assigns it to the Servers field.
func (o *ClustersNodePoolBrief) SetServers(v []ClustersServerBrief) {
	o.Servers = v
}

// GetTaints returns the Taints field value if set, zero value otherwise.
func (o *ClustersNodePoolBrief) GetTaints() []ClustersTaintBrief {
	if o == nil || IsNil(o.Taints) {
		var ret []ClustersTaintBrief
		return ret
	}
	return o.Taints
}

// GetTaintsOk returns a tuple with the Taints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClustersNodePoolBrief) GetTaintsOk() ([]ClustersTaintBrief, bool) {
	if o == nil || IsNil(o.Taints) {
		return nil, false
	}
	return o.Taints, true
}

// HasTaints returns a boolean if a field has been set.
func (o *ClustersNodePoolBrief) HasTaints() bool {
	if o != nil && !IsNil(o.Taints) {
		return true
	}

	return false
}

// SetTaints gets a reference to the given []ClustersTaintBrief and assigns it to the Taints field.
func (o *ClustersNodePoolBrief) SetTaints(v []ClustersTaintBrief) {
	o.Taints = v
}

func (o ClustersNodePoolBrief) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClustersNodePoolBrief) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Servers) {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Taints) {
		toSerialize["taints"] = o.Taints
	}
	return toSerialize, nil
}

type NullableClustersNodePoolBrief struct {
	value *ClustersNodePoolBrief
	isSet bool
}

func (v NullableClustersNodePoolBrief) Get() *ClustersNodePoolBrief {
	return v.value
}

func (v *NullableClustersNodePoolBrief) Set(val *ClustersNodePoolBrief) {
	v.value = val
	v.isSet = true
}

func (v NullableClustersNodePoolBrief) IsSet() bool {
	return v.isSet
}

func (v *NullableClustersNodePoolBrief) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClustersNodePoolBrief(val *ClustersNodePoolBrief) *NullableClustersNodePoolBrief {
	return &NullableClustersNodePoolBrief{value: val, isSet: true}
}

func (v NullableClustersNodePoolBrief) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClustersNodePoolBrief) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
