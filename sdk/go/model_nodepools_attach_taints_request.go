/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the NodepoolsAttachTaintsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolsAttachTaintsRequest{}

// NodepoolsAttachTaintsRequest struct for NodepoolsAttachTaintsRequest
type NodepoolsAttachTaintsRequest struct {
	TaintIds []string `json:"taint_ids,omitempty"`
}

// NewNodepoolsAttachTaintsRequest instantiates a new NodepoolsAttachTaintsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolsAttachTaintsRequest() *NodepoolsAttachTaintsRequest {
	this := NodepoolsAttachTaintsRequest{}
	return &this
}

// NewNodepoolsAttachTaintsRequestWithDefaults instantiates a new NodepoolsAttachTaintsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolsAttachTaintsRequestWithDefaults() *NodepoolsAttachTaintsRequest {
	this := NodepoolsAttachTaintsRequest{}
	return &this
}

// GetTaintIds returns the TaintIds field value if set, zero value otherwise.
func (o *NodepoolsAttachTaintsRequest) GetTaintIds() []string {
	if o == nil || IsNil(o.TaintIds) {
		var ret []string
		return ret
	}
	return o.TaintIds
}

// GetTaintIdsOk returns a tuple with the TaintIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsAttachTaintsRequest) GetTaintIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.TaintIds) {
		return nil, false
	}
	return o.TaintIds, true
}

// HasTaintIds returns a boolean if a field has been set.
func (o *NodepoolsAttachTaintsRequest) HasTaintIds() bool {
	if o != nil && !IsNil(o.TaintIds) {
		return true
	}

	return false
}

// SetTaintIds gets a reference to the given []string and assigns it to the TaintIds field.
func (o *NodepoolsAttachTaintsRequest) SetTaintIds(v []string) {
	o.TaintIds = v
}

func (o NodepoolsAttachTaintsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolsAttachTaintsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaintIds) {
		toSerialize["taint_ids"] = o.TaintIds
	}
	return toSerialize, nil
}

type NullableNodepoolsAttachTaintsRequest struct {
	value *NodepoolsAttachTaintsRequest
	isSet bool
}

func (v NullableNodepoolsAttachTaintsRequest) Get() *NodepoolsAttachTaintsRequest {
	return v.value
}

func (v *NullableNodepoolsAttachTaintsRequest) Set(val *NodepoolsAttachTaintsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolsAttachTaintsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolsAttachTaintsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolsAttachTaintsRequest(val *NodepoolsAttachTaintsRequest) *NullableNodepoolsAttachTaintsRequest {
	return &NullableNodepoolsAttachTaintsRequest{value: val, isSet: true}
}

func (v NullableNodepoolsAttachTaintsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolsAttachTaintsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
