/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the AuthnAdminCreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthnAdminCreateUserRequest{}

// AuthnAdminCreateUserRequest struct for AuthnAdminCreateUserRequest
type AuthnAdminCreateUserRequest struct {
	Email    *string `json:"email,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
	// Role allowed values: \"user\" or \"admin\"
	Role *string `json:"role,omitempty"`
}

// NewAuthnAdminCreateUserRequest instantiates a new AuthnAdminCreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnAdminCreateUserRequest() *AuthnAdminCreateUserRequest {
	this := AuthnAdminCreateUserRequest{}
	return &this
}

// NewAuthnAdminCreateUserRequestWithDefaults instantiates a new AuthnAdminCreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnAdminCreateUserRequestWithDefaults() *AuthnAdminCreateUserRequest {
	this := AuthnAdminCreateUserRequest{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AuthnAdminCreateUserRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAdminCreateUserRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AuthnAdminCreateUserRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AuthnAdminCreateUserRequest) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthnAdminCreateUserRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAdminCreateUserRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthnAdminCreateUserRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthnAdminCreateUserRequest) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AuthnAdminCreateUserRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAdminCreateUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AuthnAdminCreateUserRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AuthnAdminCreateUserRequest) SetPassword(v string) {
	o.Password = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AuthnAdminCreateUserRequest) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnAdminCreateUserRequest) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AuthnAdminCreateUserRequest) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AuthnAdminCreateUserRequest) SetRole(v string) {
	o.Role = &v
}

func (o AuthnAdminCreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthnAdminCreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableAuthnAdminCreateUserRequest struct {
	value *AuthnAdminCreateUserRequest
	isSet bool
}

func (v NullableAuthnAdminCreateUserRequest) Get() *AuthnAdminCreateUserRequest {
	return v.value
}

func (v *NullableAuthnAdminCreateUserRequest) Set(val *AuthnAdminCreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnAdminCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnAdminCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnAdminCreateUserRequest(val *AuthnAdminCreateUserRequest) *NullableAuthnAdminCreateUserRequest {
	return &NullableAuthnAdminCreateUserRequest{value: val, isSet: true}
}

func (v NullableAuthnAdminCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnAdminCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
