/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the AuthnListUsersOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthnListUsersOut{}

// AuthnListUsersOut struct for AuthnListUsersOut
type AuthnListUsersOut struct {
	Page     *int32              `json:"page,omitempty"`
	PageSize *int32              `json:"page_size,omitempty"`
	Total    *int32              `json:"total,omitempty"`
	Users    []AuthnUserListItem `json:"users,omitempty"`
}

// NewAuthnListUsersOut instantiates a new AuthnListUsersOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnListUsersOut() *AuthnListUsersOut {
	this := AuthnListUsersOut{}
	return &this
}

// NewAuthnListUsersOutWithDefaults instantiates a new AuthnListUsersOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnListUsersOutWithDefaults() *AuthnListUsersOut {
	this := AuthnListUsersOut{}
	return &this
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *AuthnListUsersOut) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnListUsersOut) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *AuthnListUsersOut) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *AuthnListUsersOut) SetPage(v int32) {
	o.Page = &v
}

// GetPageSize returns the PageSize field value if set, zero value otherwise.
func (o *AuthnListUsersOut) GetPageSize() int32 {
	if o == nil || IsNil(o.PageSize) {
		var ret int32
		return ret
	}
	return *o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnListUsersOut) GetPageSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.PageSize) {
		return nil, false
	}
	return o.PageSize, true
}

// HasPageSize returns a boolean if a field has been set.
func (o *AuthnListUsersOut) HasPageSize() bool {
	if o != nil && !IsNil(o.PageSize) {
		return true
	}

	return false
}

// SetPageSize gets a reference to the given int32 and assigns it to the PageSize field.
func (o *AuthnListUsersOut) SetPageSize(v int32) {
	o.PageSize = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *AuthnListUsersOut) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnListUsersOut) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *AuthnListUsersOut) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *AuthnListUsersOut) SetTotal(v int32) {
	o.Total = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *AuthnListUsersOut) GetUsers() []AuthnUserListItem {
	if o == nil || IsNil(o.Users) {
		var ret []AuthnUserListItem
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnListUsersOut) GetUsersOk() ([]AuthnUserListItem, bool) {
	if o == nil || IsNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *AuthnListUsersOut) HasUsers() bool {
	if o != nil && !IsNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []AuthnUserListItem and assigns it to the Users field.
func (o *AuthnListUsersOut) SetUsers(v []AuthnUserListItem) {
	o.Users = v
}

func (o AuthnListUsersOut) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthnListUsersOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.PageSize) {
		toSerialize["page_size"] = o.PageSize
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.Users) {
		toSerialize["users"] = o.Users
	}
	return toSerialize, nil
}

type NullableAuthnListUsersOut struct {
	value *AuthnListUsersOut
	isSet bool
}

func (v NullableAuthnListUsersOut) Get() *AuthnListUsersOut {
	return v.value
}

func (v *NullableAuthnListUsersOut) Set(val *AuthnListUsersOut) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnListUsersOut) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnListUsersOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnListUsersOut(val *AuthnListUsersOut) *NullableAuthnListUsersOut {
	return &NullableAuthnListUsersOut{value: val, isSet: true}
}

func (v NullableAuthnListUsersOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnListUsersOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
