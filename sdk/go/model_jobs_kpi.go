/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the JobsKPI type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobsKPI{}

// JobsKPI struct for JobsKPI
type JobsKPI struct {
	DueNow          *int64 `json:"dueNow,omitempty"`
	Failed24h       *int64 `json:"failed24h,omitempty"`
	Retryable       *int64 `json:"retryable,omitempty"`
	RunningNow      *int64 `json:"runningNow,omitempty"`
	ScheduledFuture *int64 `json:"scheduledFuture,omitempty"`
	Succeeded24h    *int64 `json:"succeeded24h,omitempty"`
}

// NewJobsKPI instantiates a new JobsKPI object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobsKPI() *JobsKPI {
	this := JobsKPI{}
	return &this
}

// NewJobsKPIWithDefaults instantiates a new JobsKPI object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobsKPIWithDefaults() *JobsKPI {
	this := JobsKPI{}
	return &this
}

// GetDueNow returns the DueNow field value if set, zero value otherwise.
func (o *JobsKPI) GetDueNow() int64 {
	if o == nil || IsNil(o.DueNow) {
		var ret int64
		return ret
	}
	return *o.DueNow
}

// GetDueNowOk returns a tuple with the DueNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetDueNowOk() (*int64, bool) {
	if o == nil || IsNil(o.DueNow) {
		return nil, false
	}
	return o.DueNow, true
}

// HasDueNow returns a boolean if a field has been set.
func (o *JobsKPI) HasDueNow() bool {
	if o != nil && !IsNil(o.DueNow) {
		return true
	}

	return false
}

// SetDueNow gets a reference to the given int64 and assigns it to the DueNow field.
func (o *JobsKPI) SetDueNow(v int64) {
	o.DueNow = &v
}

// GetFailed24h returns the Failed24h field value if set, zero value otherwise.
func (o *JobsKPI) GetFailed24h() int64 {
	if o == nil || IsNil(o.Failed24h) {
		var ret int64
		return ret
	}
	return *o.Failed24h
}

// GetFailed24hOk returns a tuple with the Failed24h field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetFailed24hOk() (*int64, bool) {
	if o == nil || IsNil(o.Failed24h) {
		return nil, false
	}
	return o.Failed24h, true
}

// HasFailed24h returns a boolean if a field has been set.
func (o *JobsKPI) HasFailed24h() bool {
	if o != nil && !IsNil(o.Failed24h) {
		return true
	}

	return false
}

// SetFailed24h gets a reference to the given int64 and assigns it to the Failed24h field.
func (o *JobsKPI) SetFailed24h(v int64) {
	o.Failed24h = &v
}

// GetRetryable returns the Retryable field value if set, zero value otherwise.
func (o *JobsKPI) GetRetryable() int64 {
	if o == nil || IsNil(o.Retryable) {
		var ret int64
		return ret
	}
	return *o.Retryable
}

// GetRetryableOk returns a tuple with the Retryable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetRetryableOk() (*int64, bool) {
	if o == nil || IsNil(o.Retryable) {
		return nil, false
	}
	return o.Retryable, true
}

// HasRetryable returns a boolean if a field has been set.
func (o *JobsKPI) HasRetryable() bool {
	if o != nil && !IsNil(o.Retryable) {
		return true
	}

	return false
}

// SetRetryable gets a reference to the given int64 and assigns it to the Retryable field.
func (o *JobsKPI) SetRetryable(v int64) {
	o.Retryable = &v
}

// GetRunningNow returns the RunningNow field value if set, zero value otherwise.
func (o *JobsKPI) GetRunningNow() int64 {
	if o == nil || IsNil(o.RunningNow) {
		var ret int64
		return ret
	}
	return *o.RunningNow
}

// GetRunningNowOk returns a tuple with the RunningNow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetRunningNowOk() (*int64, bool) {
	if o == nil || IsNil(o.RunningNow) {
		return nil, false
	}
	return o.RunningNow, true
}

// HasRunningNow returns a boolean if a field has been set.
func (o *JobsKPI) HasRunningNow() bool {
	if o != nil && !IsNil(o.RunningNow) {
		return true
	}

	return false
}

// SetRunningNow gets a reference to the given int64 and assigns it to the RunningNow field.
func (o *JobsKPI) SetRunningNow(v int64) {
	o.RunningNow = &v
}

// GetScheduledFuture returns the ScheduledFuture field value if set, zero value otherwise.
func (o *JobsKPI) GetScheduledFuture() int64 {
	if o == nil || IsNil(o.ScheduledFuture) {
		var ret int64
		return ret
	}
	return *o.ScheduledFuture
}

// GetScheduledFutureOk returns a tuple with the ScheduledFuture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetScheduledFutureOk() (*int64, bool) {
	if o == nil || IsNil(o.ScheduledFuture) {
		return nil, false
	}
	return o.ScheduledFuture, true
}

// HasScheduledFuture returns a boolean if a field has been set.
func (o *JobsKPI) HasScheduledFuture() bool {
	if o != nil && !IsNil(o.ScheduledFuture) {
		return true
	}

	return false
}

// SetScheduledFuture gets a reference to the given int64 and assigns it to the ScheduledFuture field.
func (o *JobsKPI) SetScheduledFuture(v int64) {
	o.ScheduledFuture = &v
}

// GetSucceeded24h returns the Succeeded24h field value if set, zero value otherwise.
func (o *JobsKPI) GetSucceeded24h() int64 {
	if o == nil || IsNil(o.Succeeded24h) {
		var ret int64
		return ret
	}
	return *o.Succeeded24h
}

// GetSucceeded24hOk returns a tuple with the Succeeded24h field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobsKPI) GetSucceeded24hOk() (*int64, bool) {
	if o == nil || IsNil(o.Succeeded24h) {
		return nil, false
	}
	return o.Succeeded24h, true
}

// HasSucceeded24h returns a boolean if a field has been set.
func (o *JobsKPI) HasSucceeded24h() bool {
	if o != nil && !IsNil(o.Succeeded24h) {
		return true
	}

	return false
}

// SetSucceeded24h gets a reference to the given int64 and assigns it to the Succeeded24h field.
func (o *JobsKPI) SetSucceeded24h(v int64) {
	o.Succeeded24h = &v
}

func (o JobsKPI) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobsKPI) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DueNow) {
		toSerialize["dueNow"] = o.DueNow
	}
	if !IsNil(o.Failed24h) {
		toSerialize["failed24h"] = o.Failed24h
	}
	if !IsNil(o.Retryable) {
		toSerialize["retryable"] = o.Retryable
	}
	if !IsNil(o.RunningNow) {
		toSerialize["runningNow"] = o.RunningNow
	}
	if !IsNil(o.ScheduledFuture) {
		toSerialize["scheduledFuture"] = o.ScheduledFuture
	}
	if !IsNil(o.Succeeded24h) {
		toSerialize["succeeded24h"] = o.Succeeded24h
	}
	return toSerialize, nil
}

type NullableJobsKPI struct {
	value *JobsKPI
	isSet bool
}

func (v NullableJobsKPI) Get() *JobsKPI {
	return v.value
}

func (v *NullableJobsKPI) Set(val *JobsKPI) {
	v.value = val
	v.isSet = true
}

func (v NullableJobsKPI) IsSet() bool {
	return v.isSet
}

func (v *NullableJobsKPI) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobsKPI(val *JobsKPI) *NullableJobsKPI {
	return &NullableJobsKPI{value: val, isSet: true}
}

func (v NullableJobsKPI) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobsKPI) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
