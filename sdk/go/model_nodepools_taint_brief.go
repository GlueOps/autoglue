/*
AutoGlue API

API for managing K3s clusters across cloud providers

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package autoglue

import (
	"encoding/json"
)

// checks if the NodepoolsTaintBrief type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodepoolsTaintBrief{}

// NodepoolsTaintBrief struct for NodepoolsTaintBrief
type NodepoolsTaintBrief struct {
	Effect *string `json:"effect,omitempty"`
	Id     *string `json:"id,omitempty"`
	Key    *string `json:"key,omitempty"`
	Value  *string `json:"value,omitempty"`
}

// NewNodepoolsTaintBrief instantiates a new NodepoolsTaintBrief object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodepoolsTaintBrief() *NodepoolsTaintBrief {
	this := NodepoolsTaintBrief{}
	return &this
}

// NewNodepoolsTaintBriefWithDefaults instantiates a new NodepoolsTaintBrief object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodepoolsTaintBriefWithDefaults() *NodepoolsTaintBrief {
	this := NodepoolsTaintBrief{}
	return &this
}

// GetEffect returns the Effect field value if set, zero value otherwise.
func (o *NodepoolsTaintBrief) GetEffect() string {
	if o == nil || IsNil(o.Effect) {
		var ret string
		return ret
	}
	return *o.Effect
}

// GetEffectOk returns a tuple with the Effect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsTaintBrief) GetEffectOk() (*string, bool) {
	if o == nil || IsNil(o.Effect) {
		return nil, false
	}
	return o.Effect, true
}

// HasEffect returns a boolean if a field has been set.
func (o *NodepoolsTaintBrief) HasEffect() bool {
	if o != nil && !IsNil(o.Effect) {
		return true
	}

	return false
}

// SetEffect gets a reference to the given string and assigns it to the Effect field.
func (o *NodepoolsTaintBrief) SetEffect(v string) {
	o.Effect = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *NodepoolsTaintBrief) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsTaintBrief) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *NodepoolsTaintBrief) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *NodepoolsTaintBrief) SetId(v string) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *NodepoolsTaintBrief) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsTaintBrief) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *NodepoolsTaintBrief) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *NodepoolsTaintBrief) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *NodepoolsTaintBrief) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodepoolsTaintBrief) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *NodepoolsTaintBrief) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *NodepoolsTaintBrief) SetValue(v string) {
	o.Value = &v
}

func (o NodepoolsTaintBrief) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodepoolsTaintBrief) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Effect) {
		toSerialize["effect"] = o.Effect
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableNodepoolsTaintBrief struct {
	value *NodepoolsTaintBrief
	isSet bool
}

func (v NullableNodepoolsTaintBrief) Get() *NodepoolsTaintBrief {
	return v.value
}

func (v *NullableNodepoolsTaintBrief) Set(val *NodepoolsTaintBrief) {
	v.value = val
	v.isSet = true
}

func (v NullableNodepoolsTaintBrief) IsSet() bool {
	return v.isSet
}

func (v *NullableNodepoolsTaintBrief) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodepoolsTaintBrief(val *NodepoolsTaintBrief) *NullableNodepoolsTaintBrief {
	return &NullableNodepoolsTaintBrief{value: val, isSet: true}
}

func (v NullableNodepoolsTaintBrief) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodepoolsTaintBrief) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
