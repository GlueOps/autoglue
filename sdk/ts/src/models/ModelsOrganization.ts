/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ModelsOrganization
 */
export interface ModelsOrganization {
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  logo?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  metadata?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  slug?: string;
  /**
   *
   * @type {string}
   * @memberof ModelsOrganization
   */
  updated_at?: string;
}

/**
 * Check if a given object implements the ModelsOrganization interface.
 */
export function instanceOfModelsOrganization(
  value: object,
): value is ModelsOrganization {
  return true;
}

export function ModelsOrganizationFromJSON(json: any): ModelsOrganization {
  return ModelsOrganizationFromJSONTyped(json, false);
}

export function ModelsOrganizationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ModelsOrganization {
  if (json == null) {
    return json;
  }
  return {
    created_at: json["created_at"] == null ? undefined : json["created_at"],
    id: json["id"] == null ? undefined : json["id"],
    logo: json["logo"] == null ? undefined : json["logo"],
    metadata: json["metadata"] == null ? undefined : json["metadata"],
    name: json["name"] == null ? undefined : json["name"],
    slug: json["slug"] == null ? undefined : json["slug"],
    updated_at: json["updated_at"] == null ? undefined : json["updated_at"],
  };
}

export function ModelsOrganizationToJSON(json: any): ModelsOrganization {
  return ModelsOrganizationToJSONTyped(json, false);
}

export function ModelsOrganizationToJSONTyped(
  value?: ModelsOrganization | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    created_at: value["created_at"],
    id: value["id"],
    logo: value["logo"],
    metadata: value["metadata"],
    name: value["name"],
    slug: value["slug"],
    updated_at: value["updated_at"],
  };
}
