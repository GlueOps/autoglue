/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { NodepoolsServerBrief } from "./NodepoolsServerBrief";
import {
  NodepoolsServerBriefFromJSON,
  NodepoolsServerBriefFromJSONTyped,
  NodepoolsServerBriefToJSON,
  NodepoolsServerBriefToJSONTyped,
} from "./NodepoolsServerBrief";

/**
 *
 * @export
 * @interface NodepoolsNodePoolResponse
 */
export interface NodepoolsNodePoolResponse {
  /**
   *
   * @type {string}
   * @memberof NodepoolsNodePoolResponse
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof NodepoolsNodePoolResponse
   */
  name?: string;
  /**
   *
   * @type {Array<NodepoolsServerBrief>}
   * @memberof NodepoolsNodePoolResponse
   */
  servers?: Array<NodepoolsServerBrief>;
}

/**
 * Check if a given object implements the NodepoolsNodePoolResponse interface.
 */
export function instanceOfNodepoolsNodePoolResponse(
  value: object,
): value is NodepoolsNodePoolResponse {
  return true;
}

export function NodepoolsNodePoolResponseFromJSON(
  json: any,
): NodepoolsNodePoolResponse {
  return NodepoolsNodePoolResponseFromJSONTyped(json, false);
}

export function NodepoolsNodePoolResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): NodepoolsNodePoolResponse {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    servers:
      json["servers"] == null
        ? undefined
        : (json["servers"] as Array<any>).map(NodepoolsServerBriefFromJSON),
  };
}

export function NodepoolsNodePoolResponseToJSON(
  json: any,
): NodepoolsNodePoolResponse {
  return NodepoolsNodePoolResponseToJSONTyped(json, false);
}

export function NodepoolsNodePoolResponseToJSONTyped(
  value?: NodepoolsNodePoolResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    servers:
      value["servers"] == null
        ? undefined
        : (value["servers"] as Array<any>).map(NodepoolsServerBriefToJSON),
  };
}
