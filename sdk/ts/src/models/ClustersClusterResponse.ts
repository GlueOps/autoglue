/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ClustersServerBrief } from "./ClustersServerBrief";
import {
  ClustersServerBriefFromJSON,
  ClustersServerBriefFromJSONTyped,
  ClustersServerBriefToJSON,
  ClustersServerBriefToJSONTyped,
} from "./ClustersServerBrief";
import type { ClustersNodePoolBrief } from "./ClustersNodePoolBrief";
import {
  ClustersNodePoolBriefFromJSON,
  ClustersNodePoolBriefFromJSONTyped,
  ClustersNodePoolBriefToJSON,
  ClustersNodePoolBriefToJSONTyped,
} from "./ClustersNodePoolBrief";

/**
 *
 * @export
 * @interface ClustersClusterResponse
 */
export interface ClustersClusterResponse {
  /**
   *
   * @type {ClustersServerBrief}
   * @memberof ClustersClusterResponse
   */
  bastion_server?: ClustersServerBrief;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  cluster_load_balancer?: string;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  control_load_balancer?: string;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  name?: string;
  /**
   *
   * @type {Array<ClustersNodePoolBrief>}
   * @memberof ClustersClusterResponse
   */
  node_pools?: Array<ClustersNodePoolBrief>;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  provider?: string;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  region?: string;
  /**
   *
   * @type {string}
   * @memberof ClustersClusterResponse
   */
  status?: string;
}

/**
 * Check if a given object implements the ClustersClusterResponse interface.
 */
export function instanceOfClustersClusterResponse(
  value: object,
): value is ClustersClusterResponse {
  return true;
}

export function ClustersClusterResponseFromJSON(
  json: any,
): ClustersClusterResponse {
  return ClustersClusterResponseFromJSONTyped(json, false);
}

export function ClustersClusterResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClustersClusterResponse {
  if (json == null) {
    return json;
  }
  return {
    bastion_server:
      json["bastion_server"] == null
        ? undefined
        : ClustersServerBriefFromJSON(json["bastion_server"]),
    cluster_load_balancer:
      json["cluster_load_balancer"] == null
        ? undefined
        : json["cluster_load_balancer"],
    control_load_balancer:
      json["control_load_balancer"] == null
        ? undefined
        : json["control_load_balancer"],
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    node_pools:
      json["node_pools"] == null
        ? undefined
        : (json["node_pools"] as Array<any>).map(ClustersNodePoolBriefFromJSON),
    provider: json["provider"] == null ? undefined : json["provider"],
    region: json["region"] == null ? undefined : json["region"],
    status: json["status"] == null ? undefined : json["status"],
  };
}

export function ClustersClusterResponseToJSON(
  json: any,
): ClustersClusterResponse {
  return ClustersClusterResponseToJSONTyped(json, false);
}

export function ClustersClusterResponseToJSONTyped(
  value?: ClustersClusterResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    bastion_server: ClustersServerBriefToJSON(value["bastion_server"]),
    cluster_load_balancer: value["cluster_load_balancer"],
    control_load_balancer: value["control_load_balancer"],
    id: value["id"],
    name: value["name"],
    node_pools:
      value["node_pools"] == null
        ? undefined
        : (value["node_pools"] as Array<any>).map(ClustersNodePoolBriefToJSON),
    provider: value["provider"],
    region: value["region"],
    status: value["status"],
  };
}
