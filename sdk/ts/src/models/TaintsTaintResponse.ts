/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { TaintsNodePoolBrief } from "./TaintsNodePoolBrief";
import {
  TaintsNodePoolBriefFromJSON,
  TaintsNodePoolBriefFromJSONTyped,
  TaintsNodePoolBriefToJSON,
  TaintsNodePoolBriefToJSONTyped,
} from "./TaintsNodePoolBrief";

/**
 *
 * @export
 * @interface TaintsTaintResponse
 */
export interface TaintsTaintResponse {
  /**
   *
   * @type {string}
   * @memberof TaintsTaintResponse
   */
  effect?: string;
  /**
   *
   * @type {string}
   * @memberof TaintsTaintResponse
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof TaintsTaintResponse
   */
  key?: string;
  /**
   *
   * @type {Array<TaintsNodePoolBrief>}
   * @memberof TaintsTaintResponse
   */
  node_groups?: Array<TaintsNodePoolBrief>;
  /**
   *
   * @type {string}
   * @memberof TaintsTaintResponse
   */
  value?: string;
}

/**
 * Check if a given object implements the TaintsTaintResponse interface.
 */
export function instanceOfTaintsTaintResponse(
  value: object,
): value is TaintsTaintResponse {
  return true;
}

export function TaintsTaintResponseFromJSON(json: any): TaintsTaintResponse {
  return TaintsTaintResponseFromJSONTyped(json, false);
}

export function TaintsTaintResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TaintsTaintResponse {
  if (json == null) {
    return json;
  }
  return {
    effect: json["effect"] == null ? undefined : json["effect"],
    id: json["id"] == null ? undefined : json["id"],
    key: json["key"] == null ? undefined : json["key"],
    node_groups:
      json["node_groups"] == null
        ? undefined
        : (json["node_groups"] as Array<any>).map(TaintsNodePoolBriefFromJSON),
    value: json["value"] == null ? undefined : json["value"],
  };
}

export function TaintsTaintResponseToJSON(json: any): TaintsTaintResponse {
  return TaintsTaintResponseToJSONTyped(json, false);
}

export function TaintsTaintResponseToJSONTyped(
  value?: TaintsTaintResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    effect: value["effect"],
    id: value["id"],
    key: value["key"],
    node_groups:
      value["node_groups"] == null
        ? undefined
        : (value["node_groups"] as Array<any>).map(TaintsNodePoolBriefToJSON),
    value: value["value"],
  };
}
