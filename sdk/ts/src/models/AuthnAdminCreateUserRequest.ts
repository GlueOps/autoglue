/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface AuthnAdminCreateUserRequest
 */
export interface AuthnAdminCreateUserRequest {
  /**
   *
   * @type {string}
   * @memberof AuthnAdminCreateUserRequest
   */
  email?: string;
  /**
   *
   * @type {string}
   * @memberof AuthnAdminCreateUserRequest
   */
  name?: string;
  /**
   *
   * @type {string}
   * @memberof AuthnAdminCreateUserRequest
   */
  password?: string;
  /**
   * Role allowed values: "user" or "admin"
   * @type {string}
   * @memberof AuthnAdminCreateUserRequest
   */
  role?: AuthnAdminCreateUserRequestRoleEnum;
}

/**
 * @export
 */
export const AuthnAdminCreateUserRequestRoleEnum = {
  user: "user",
  admin: "admin",
} as const;
export type AuthnAdminCreateUserRequestRoleEnum =
  (typeof AuthnAdminCreateUserRequestRoleEnum)[keyof typeof AuthnAdminCreateUserRequestRoleEnum];

/**
 * Check if a given object implements the AuthnAdminCreateUserRequest interface.
 */
export function instanceOfAuthnAdminCreateUserRequest(
  value: object,
): value is AuthnAdminCreateUserRequest {
  return true;
}

export function AuthnAdminCreateUserRequestFromJSON(
  json: any,
): AuthnAdminCreateUserRequest {
  return AuthnAdminCreateUserRequestFromJSONTyped(json, false);
}

export function AuthnAdminCreateUserRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AuthnAdminCreateUserRequest {
  if (json == null) {
    return json;
  }
  return {
    email: json["email"] == null ? undefined : json["email"],
    name: json["name"] == null ? undefined : json["name"],
    password: json["password"] == null ? undefined : json["password"],
    role: json["role"] == null ? undefined : json["role"],
  };
}

export function AuthnAdminCreateUserRequestToJSON(
  json: any,
): AuthnAdminCreateUserRequest {
  return AuthnAdminCreateUserRequestToJSONTyped(json, false);
}

export function AuthnAdminCreateUserRequestToJSONTyped(
  value?: AuthnAdminCreateUserRequest | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    email: value["email"],
    name: value["name"],
    password: value["password"],
    role: value["role"],
  };
}
