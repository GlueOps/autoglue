/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ModelsRole } from "./ModelsRole";
import {
  ModelsRoleFromJSON,
  ModelsRoleFromJSONTyped,
  ModelsRoleToJSON,
  ModelsRoleToJSONTyped,
} from "./ModelsRole";

/**
 *
 * @export
 * @interface AuthnUserDTO
 */
export interface AuthnUserDTO {
  /**
   *
   * @type {string}
   * @memberof AuthnUserDTO
   */
  created_at?: string;
  /**
   *
   * @type {string}
   * @memberof AuthnUserDTO
   */
  email?: string;
  /**
   *
   * @type {boolean}
   * @memberof AuthnUserDTO
   */
  email_verified?: boolean;
  /**
   *
   * @type {string}
   * @memberof AuthnUserDTO
   */
  id?: string;
  /**
   *
   * @type {string}
   * @memberof AuthnUserDTO
   */
  name?: string;
  /**
   *
   * @type {ModelsRole}
   * @memberof AuthnUserDTO
   */
  role?: ModelsRole;
  /**
   *
   * @type {string}
   * @memberof AuthnUserDTO
   */
  updated_at?: string;
}

/**
 * Check if a given object implements the AuthnUserDTO interface.
 */
export function instanceOfAuthnUserDTO(value: object): value is AuthnUserDTO {
  return true;
}

export function AuthnUserDTOFromJSON(json: any): AuthnUserDTO {
  return AuthnUserDTOFromJSONTyped(json, false);
}

export function AuthnUserDTOFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): AuthnUserDTO {
  if (json == null) {
    return json;
  }
  return {
    created_at: json["created_at"] == null ? undefined : json["created_at"],
    email: json["email"] == null ? undefined : json["email"],
    email_verified:
      json["email_verified"] == null ? undefined : json["email_verified"],
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    role: json["role"] == null ? undefined : ModelsRoleFromJSON(json["role"]),
    updated_at: json["updated_at"] == null ? undefined : json["updated_at"],
  };
}

export function AuthnUserDTOToJSON(json: any): AuthnUserDTO {
  return AuthnUserDTOToJSONTyped(json, false);
}

export function AuthnUserDTOToJSONTyped(
  value?: AuthnUserDTO | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    created_at: value["created_at"],
    email: value["email"],
    email_verified: value["email_verified"],
    id: value["id"],
    name: value["name"],
    role: ModelsRoleToJSON(value["role"]),
    updated_at: value["updated_at"],
  };
}
