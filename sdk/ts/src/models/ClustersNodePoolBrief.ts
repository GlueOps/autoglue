/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { ClustersTaintBrief } from "./ClustersTaintBrief";
import {
  ClustersTaintBriefFromJSON,
  ClustersTaintBriefFromJSONTyped,
  ClustersTaintBriefToJSON,
  ClustersTaintBriefToJSONTyped,
} from "./ClustersTaintBrief";
import type { ClustersServerBrief } from "./ClustersServerBrief";
import {
  ClustersServerBriefFromJSON,
  ClustersServerBriefFromJSONTyped,
  ClustersServerBriefToJSON,
  ClustersServerBriefToJSONTyped,
} from "./ClustersServerBrief";
import type { ClustersAnnotationBrief } from "./ClustersAnnotationBrief";
import {
  ClustersAnnotationBriefFromJSON,
  ClustersAnnotationBriefFromJSONTyped,
  ClustersAnnotationBriefToJSON,
  ClustersAnnotationBriefToJSONTyped,
} from "./ClustersAnnotationBrief";
import type { ClustersLabelBrief } from "./ClustersLabelBrief";
import {
  ClustersLabelBriefFromJSON,
  ClustersLabelBriefFromJSONTyped,
  ClustersLabelBriefToJSON,
  ClustersLabelBriefToJSONTyped,
} from "./ClustersLabelBrief";

/**
 *
 * @export
 * @interface ClustersNodePoolBrief
 */
export interface ClustersNodePoolBrief {
  /**
   *
   * @type {Array<ClustersAnnotationBrief>}
   * @memberof ClustersNodePoolBrief
   */
  annotations?: Array<ClustersAnnotationBrief>;
  /**
   *
   * @type {string}
   * @memberof ClustersNodePoolBrief
   */
  id?: string;
  /**
   *
   * @type {Array<ClustersLabelBrief>}
   * @memberof ClustersNodePoolBrief
   */
  labels?: Array<ClustersLabelBrief>;
  /**
   *
   * @type {string}
   * @memberof ClustersNodePoolBrief
   */
  name?: string;
  /**
   *
   * @type {Array<ClustersServerBrief>}
   * @memberof ClustersNodePoolBrief
   */
  servers?: Array<ClustersServerBrief>;
  /**
   *
   * @type {Array<ClustersTaintBrief>}
   * @memberof ClustersNodePoolBrief
   */
  taints?: Array<ClustersTaintBrief>;
}

/**
 * Check if a given object implements the ClustersNodePoolBrief interface.
 */
export function instanceOfClustersNodePoolBrief(
  value: object,
): value is ClustersNodePoolBrief {
  return true;
}

export function ClustersNodePoolBriefFromJSON(
  json: any,
): ClustersNodePoolBrief {
  return ClustersNodePoolBriefFromJSONTyped(json, false);
}

export function ClustersNodePoolBriefFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): ClustersNodePoolBrief {
  if (json == null) {
    return json;
  }
  return {
    annotations:
      json["annotations"] == null
        ? undefined
        : (json["annotations"] as Array<any>).map(
            ClustersAnnotationBriefFromJSON,
          ),
    id: json["id"] == null ? undefined : json["id"],
    labels:
      json["labels"] == null
        ? undefined
        : (json["labels"] as Array<any>).map(ClustersLabelBriefFromJSON),
    name: json["name"] == null ? undefined : json["name"],
    servers:
      json["servers"] == null
        ? undefined
        : (json["servers"] as Array<any>).map(ClustersServerBriefFromJSON),
    taints:
      json["taints"] == null
        ? undefined
        : (json["taints"] as Array<any>).map(ClustersTaintBriefFromJSON),
  };
}

export function ClustersNodePoolBriefToJSON(json: any): ClustersNodePoolBrief {
  return ClustersNodePoolBriefToJSONTyped(json, false);
}

export function ClustersNodePoolBriefToJSONTyped(
  value?: ClustersNodePoolBrief | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    annotations:
      value["annotations"] == null
        ? undefined
        : (value["annotations"] as Array<any>).map(
            ClustersAnnotationBriefToJSON,
          ),
    id: value["id"],
    labels:
      value["labels"] == null
        ? undefined
        : (value["labels"] as Array<any>).map(ClustersLabelBriefToJSON),
    name: value["name"],
    servers:
      value["servers"] == null
        ? undefined
        : (value["servers"] as Array<any>).map(ClustersServerBriefToJSON),
    taints:
      value["taints"] == null
        ? undefined
        : (value["taints"] as Array<any>).map(ClustersTaintBriefToJSON),
  };
}
