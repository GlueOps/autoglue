/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthnAuthClaimsDTO
 */
export interface AuthnAuthClaimsDTO {
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthnAuthClaimsDTO
     */
    aud?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof AuthnAuthClaimsDTO
     */
    exp?: number;
    /**
     * 
     * @type {number}
     * @memberof AuthnAuthClaimsDTO
     */
    iat?: number;
    /**
     * 
     * @type {string}
     * @memberof AuthnAuthClaimsDTO
     */
    iss?: string;
    /**
     * 
     * @type {number}
     * @memberof AuthnAuthClaimsDTO
     */
    nbf?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthnAuthClaimsDTO
     */
    orgs?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof AuthnAuthClaimsDTO
     */
    roles?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof AuthnAuthClaimsDTO
     */
    sub?: string;
}

/**
 * Check if a given object implements the AuthnAuthClaimsDTO interface.
 */
export function instanceOfAuthnAuthClaimsDTO(value: object): value is AuthnAuthClaimsDTO {
    return true;
}

export function AuthnAuthClaimsDTOFromJSON(json: any): AuthnAuthClaimsDTO {
    return AuthnAuthClaimsDTOFromJSONTyped(json, false);
}

export function AuthnAuthClaimsDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthnAuthClaimsDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'aud': json['aud'] == null ? undefined : json['aud'],
        'exp': json['exp'] == null ? undefined : json['exp'],
        'iat': json['iat'] == null ? undefined : json['iat'],
        'iss': json['iss'] == null ? undefined : json['iss'],
        'nbf': json['nbf'] == null ? undefined : json['nbf'],
        'orgs': json['orgs'] == null ? undefined : json['orgs'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'sub': json['sub'] == null ? undefined : json['sub'],
    };
}

export function AuthnAuthClaimsDTOToJSON(json: any): AuthnAuthClaimsDTO {
    return AuthnAuthClaimsDTOToJSONTyped(json, false);
}

export function AuthnAuthClaimsDTOToJSONTyped(value?: AuthnAuthClaimsDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'aud': value['aud'],
        'exp': value['exp'],
        'iat': value['iat'],
        'iss': value['iss'],
        'nbf': value['nbf'],
        'orgs': value['orgs'],
        'roles': value['roles'],
        'sub': value['sub'],
    };
}

