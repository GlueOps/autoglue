/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnnotationsNodePoolBrief } from './AnnotationsNodePoolBrief';
import {
    AnnotationsNodePoolBriefFromJSON,
    AnnotationsNodePoolBriefFromJSONTyped,
    AnnotationsNodePoolBriefToJSON,
    AnnotationsNodePoolBriefToJSONTyped,
} from './AnnotationsNodePoolBrief';

/**
 * 
 * @export
 * @interface AnnotationsAnnotationResponse
 */
export interface AnnotationsAnnotationResponse {
    /**
     * 
     * @type {string}
     * @memberof AnnotationsAnnotationResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof AnnotationsAnnotationResponse
     */
    key?: string;
    /**
     * 
     * @type {Array<AnnotationsNodePoolBrief>}
     * @memberof AnnotationsAnnotationResponse
     */
    node_pools?: Array<AnnotationsNodePoolBrief>;
    /**
     * 
     * @type {string}
     * @memberof AnnotationsAnnotationResponse
     */
    value?: string;
}

/**
 * Check if a given object implements the AnnotationsAnnotationResponse interface.
 */
export function instanceOfAnnotationsAnnotationResponse(value: object): value is AnnotationsAnnotationResponse {
    return true;
}

export function AnnotationsAnnotationResponseFromJSON(json: any): AnnotationsAnnotationResponse {
    return AnnotationsAnnotationResponseFromJSONTyped(json, false);
}

export function AnnotationsAnnotationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationsAnnotationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'key': json['key'] == null ? undefined : json['key'],
        'node_pools': json['node_pools'] == null ? undefined : ((json['node_pools'] as Array<any>).map(AnnotationsNodePoolBriefFromJSON)),
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function AnnotationsAnnotationResponseToJSON(json: any): AnnotationsAnnotationResponse {
    return AnnotationsAnnotationResponseToJSONTyped(json, false);
}

export function AnnotationsAnnotationResponseToJSONTyped(value?: AnnotationsAnnotationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'key': value['key'],
        'node_pools': value['node_pools'] == null ? undefined : ((value['node_pools'] as Array<any>).map(AnnotationsNodePoolBriefToJSON)),
        'value': value['value'],
    };
}

