/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClustersCreateClusterRequest
 */
export interface ClustersCreateClusterRequest {
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    bastion_server_id?: string;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    cluster_load_balancer?: string;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    control_load_balancer?: string;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    kubeconfig?: string;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    name?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ClustersCreateClusterRequest
     */
    node_pool_ids?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    provider?: string;
    /**
     * 
     * @type {string}
     * @memberof ClustersCreateClusterRequest
     */
    region?: string;
}

/**
 * Check if a given object implements the ClustersCreateClusterRequest interface.
 */
export function instanceOfClustersCreateClusterRequest(value: object): value is ClustersCreateClusterRequest {
    return true;
}

export function ClustersCreateClusterRequestFromJSON(json: any): ClustersCreateClusterRequest {
    return ClustersCreateClusterRequestFromJSONTyped(json, false);
}

export function ClustersCreateClusterRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClustersCreateClusterRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'bastion_server_id': json['bastion_server_id'] == null ? undefined : json['bastion_server_id'],
        'cluster_load_balancer': json['cluster_load_balancer'] == null ? undefined : json['cluster_load_balancer'],
        'control_load_balancer': json['control_load_balancer'] == null ? undefined : json['control_load_balancer'],
        'kubeconfig': json['kubeconfig'] == null ? undefined : json['kubeconfig'],
        'name': json['name'] == null ? undefined : json['name'],
        'node_pool_ids': json['node_pool_ids'] == null ? undefined : json['node_pool_ids'],
        'provider': json['provider'] == null ? undefined : json['provider'],
        'region': json['region'] == null ? undefined : json['region'],
    };
}

export function ClustersCreateClusterRequestToJSON(json: any): ClustersCreateClusterRequest {
    return ClustersCreateClusterRequestToJSONTyped(json, false);
}

export function ClustersCreateClusterRequestToJSONTyped(value?: ClustersCreateClusterRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bastion_server_id': value['bastion_server_id'],
        'cluster_load_balancer': value['cluster_load_balancer'],
        'control_load_balancer': value['control_load_balancer'],
        'kubeconfig': value['kubeconfig'],
        'name': value['name'],
        'node_pool_ids': value['node_pool_ids'],
        'provider': value['provider'],
        'region': value['region'],
    };
}

