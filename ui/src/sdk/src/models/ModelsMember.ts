/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsUser } from './ModelsUser';
import {
    ModelsUserFromJSON,
    ModelsUserFromJSONTyped,
    ModelsUserToJSON,
    ModelsUserToJSONTyped,
} from './ModelsUser';
import type { ModelsOrganization } from './ModelsOrganization';
import {
    ModelsOrganizationFromJSON,
    ModelsOrganizationFromJSONTyped,
    ModelsOrganizationToJSON,
    ModelsOrganizationToJSONTyped,
} from './ModelsOrganization';
import type { ModelsMemberRole } from './ModelsMemberRole';
import {
    ModelsMemberRoleFromJSON,
    ModelsMemberRoleFromJSONTyped,
    ModelsMemberRoleToJSON,
    ModelsMemberRoleToJSONTyped,
} from './ModelsMemberRole';

/**
 * 
 * @export
 * @interface ModelsMember
 */
export interface ModelsMember {
    /**
     * 
     * @type {string}
     * @memberof ModelsMember
     */
    created_at?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsMember
     */
    id?: string;
    /**
     * 
     * @type {ModelsOrganization}
     * @memberof ModelsMember
     */
    organization?: ModelsOrganization;
    /**
     * 
     * @type {string}
     * @memberof ModelsMember
     */
    organization_id?: string;
    /**
     * e.g. admin, member
     * @type {ModelsMemberRole}
     * @memberof ModelsMember
     */
    role?: ModelsMemberRole;
    /**
     * 
     * @type {string}
     * @memberof ModelsMember
     */
    updated_at?: string;
    /**
     * 
     * @type {ModelsUser}
     * @memberof ModelsMember
     */
    user?: ModelsUser;
    /**
     * 
     * @type {string}
     * @memberof ModelsMember
     */
    user_id?: string;
}



/**
 * Check if a given object implements the ModelsMember interface.
 */
export function instanceOfModelsMember(value: object): value is ModelsMember {
    return true;
}

export function ModelsMemberFromJSON(json: any): ModelsMember {
    return ModelsMemberFromJSONTyped(json, false);
}

export function ModelsMemberFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsMember {
    if (json == null) {
        return json;
    }
    return {
        
        'created_at': json['created_at'] == null ? undefined : json['created_at'],
        'id': json['id'] == null ? undefined : json['id'],
        'organization': json['organization'] == null ? undefined : ModelsOrganizationFromJSON(json['organization']),
        'organization_id': json['organization_id'] == null ? undefined : json['organization_id'],
        'role': json['role'] == null ? undefined : ModelsMemberRoleFromJSON(json['role']),
        'updated_at': json['updated_at'] == null ? undefined : json['updated_at'],
        'user': json['user'] == null ? undefined : ModelsUserFromJSON(json['user']),
        'user_id': json['user_id'] == null ? undefined : json['user_id'],
    };
}

export function ModelsMemberToJSON(json: any): ModelsMember {
    return ModelsMemberToJSONTyped(json, false);
}

export function ModelsMemberToJSONTyped(value?: ModelsMember | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'created_at': value['created_at'],
        'id': value['id'],
        'organization': ModelsOrganizationToJSON(value['organization']),
        'organization_id': value['organization_id'],
        'role': ModelsMemberRoleToJSON(value['role']),
        'updated_at': value['updated_at'],
        'user': ModelsUserToJSON(value['user']),
        'user_id': value['user_id'],
    };
}

