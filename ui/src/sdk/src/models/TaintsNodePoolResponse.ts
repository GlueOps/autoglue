/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TaintsServerBrief } from './TaintsServerBrief';
import {
    TaintsServerBriefFromJSON,
    TaintsServerBriefFromJSONTyped,
    TaintsServerBriefToJSON,
    TaintsServerBriefToJSONTyped,
} from './TaintsServerBrief';

/**
 * 
 * @export
 * @interface TaintsNodePoolResponse
 */
export interface TaintsNodePoolResponse {
    /**
     * 
     * @type {string}
     * @memberof TaintsNodePoolResponse
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TaintsNodePoolResponse
     */
    name?: string;
    /**
     * 
     * @type {Array<TaintsServerBrief>}
     * @memberof TaintsNodePoolResponse
     */
    servers?: Array<TaintsServerBrief>;
}

/**
 * Check if a given object implements the TaintsNodePoolResponse interface.
 */
export function instanceOfTaintsNodePoolResponse(value: object): value is TaintsNodePoolResponse {
    return true;
}

export function TaintsNodePoolResponseFromJSON(json: any): TaintsNodePoolResponse {
    return TaintsNodePoolResponseFromJSONTyped(json, false);
}

export function TaintsNodePoolResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaintsNodePoolResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'servers': json['servers'] == null ? undefined : ((json['servers'] as Array<any>).map(TaintsServerBriefFromJSON)),
    };
}

export function TaintsNodePoolResponseToJSON(json: any): TaintsNodePoolResponse {
    return TaintsNodePoolResponseToJSONTyped(json, false);
}

export function TaintsNodePoolResponseToJSONTyped(value?: TaintsNodePoolResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'servers': value['servers'] == null ? undefined : ((value['servers'] as Array<any>).map(TaintsServerBriefToJSON)),
    };
}

