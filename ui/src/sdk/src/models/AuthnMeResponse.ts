/* tslint:disable */
/* eslint-disable */
/**
 * AutoGlue API
 * API for managing K3s clusters across cloud providers
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AuthnUserDTO } from './AuthnUserDTO';
import {
    AuthnUserDTOFromJSON,
    AuthnUserDTOFromJSONTyped,
    AuthnUserDTOToJSON,
    AuthnUserDTOToJSONTyped,
} from './AuthnUserDTO';
import type { AuthnAuthClaimsDTO } from './AuthnAuthClaimsDTO';
import {
    AuthnAuthClaimsDTOFromJSON,
    AuthnAuthClaimsDTOFromJSONTyped,
    AuthnAuthClaimsDTOToJSON,
    AuthnAuthClaimsDTOToJSONTyped,
} from './AuthnAuthClaimsDTO';

/**
 * 
 * @export
 * @interface AuthnMeResponse
 */
export interface AuthnMeResponse {
    /**
     * 
     * @type {AuthnAuthClaimsDTO}
     * @memberof AuthnMeResponse
     */
    claims?: AuthnAuthClaimsDTO;
    /**
     * 
     * @type {string}
     * @memberof AuthnMeResponse
     */
    org_role?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthnMeResponse
     */
    organization_id?: string;
    /**
     * 
     * @type {AuthnUserDTO}
     * @memberof AuthnMeResponse
     */
    user_id?: AuthnUserDTO;
}

/**
 * Check if a given object implements the AuthnMeResponse interface.
 */
export function instanceOfAuthnMeResponse(value: object): value is AuthnMeResponse {
    return true;
}

export function AuthnMeResponseFromJSON(json: any): AuthnMeResponse {
    return AuthnMeResponseFromJSONTyped(json, false);
}

export function AuthnMeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthnMeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'claims': json['claims'] == null ? undefined : AuthnAuthClaimsDTOFromJSON(json['claims']),
        'org_role': json['org_role'] == null ? undefined : json['org_role'],
        'organization_id': json['organization_id'] == null ? undefined : json['organization_id'],
        'user_id': json['user_id'] == null ? undefined : AuthnUserDTOFromJSON(json['user_id']),
    };
}

export function AuthnMeResponseToJSON(json: any): AuthnMeResponse {
    return AuthnMeResponseToJSONTyped(json, false);
}

export function AuthnMeResponseToJSONTyped(value?: AuthnMeResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'claims': AuthnAuthClaimsDTOToJSON(value['claims']),
        'org_role': value['org_role'],
        'organization_id': value['organization_id'],
        'user_id': AuthnUserDTOToJSON(value['user_id']),
    };
}

